using System;
using Windows.UI;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Media;
using Windows.UI.Xaml.Shapes;

namespace ZX_sharp.Hardware.Z80_CPU
{
    public class Z80
    {
        public Canvas screenCanvas { get; set; }
        public byte[] scr_atr_RAM = new byte[768];
        public byte[] scr_picsel_RAM = new byte[6144];
        public byte[] ram_ = new byte[65536];

        byte[] scr_ypoz = new byte[192]{//Mассив порядка строк на экране
0,8,16,24,32,40,48,56,
1,9,17,25,33,41,49,57,
2,10,18,26,34,42,50,58,
3,11,19,27,35,43,51,59,
4,12,20,28,36,44,52,60,
5,13,21,29,37,45,53,61,
6,14,22,30,38,46,54,62,
7,15,23,31,39,47,55,63,

64,72,80,88,96,104,112,120,
65,73,81,89,97,105,113,121,
66,74,82,90,98,106,114,122,
67,75,83,91,99,107,115,123,
68,76,84,92,100,108,116,124,
69,77,85,93,101,109,117,125,
70,78,86,94,102,110,118,126,
71,79,87,95,103,111,119,127,

128,136,144,152,160,168,176,184,
129,137,145,153,161,169,177,185,
130,138,146,154,162,170,178,186,
131,139,147,155,163,171,179,187,
132,140,148,156,164,172,180,188,
133,141,149,157,165,173,181,189,
134,142,150,158,166,174,182,190,
135,143,151,159,167,175,183,191
};

        int[] scr_atr_ypoz = new int[192] {//Массив начала строк в атрибуте
0,256,512,768,1024,1280,1536,1792,
32,288,544,800,1056,1312,1568,1824,
64,320,576,832,1088,1344,1600,1856,
96,352,608,864,1120,1376,1632,1888,
128,384,640,896,1152,1408,1664,1920,
160,416,672,928,1184,1440,1696,1952,
192,448,704,960,1216,1472,1728,1984,
224,480,736,992,1248,1504,1760,2016,

2048,2304,2560,2816,3072,3328,3584,3840,
2080,2336,2592,2848,3104,3360,3616,3872,
2112,2368,2624,2880,3136,3392,3648,3904,
2144,2400,2656,2912,3168,3424,3680,3936,
2176,2432,2688,2944,3200,3456,3712,3968,
2208,2464,2720,2976,3232,3488,3744,4000,
2240,2496,2752,3008,3264,3520,3776,4032,
2272,2528,2784,3040,3296,3552,3808,4064,

4096,4352,4608,4864,5120,5376,5632,5888,
4128,4384,4640,4896,5152,5408,5664,5920,
4160,4416,4672,4928,5184,5440,5696,5952,
4192,4448,4704,4960,5216,5472,5728,5984,
4224,4480,4736,4992,5248,5504,5760,6016,
4256,4512,4768,5024,5280,5536,5792,6048,
4288,4544,4800,5056,5312,5568,5824,6080,
4320,4576,4832,5088,5344,5600,5856,6112
};

        // Flag register , 6 flip flops (Carry, Sign, Parity, Overflow, Zero, HALT)
        const byte FLAG_C = 0x01;
        const byte FLAG_N = 0x02;
        const byte FLAG_PV = 0x04;
        const byte FLAG_H = 0x08;
        const byte FLAG_Z = 0x40;
        const byte FLAG_S = 0x80;

        //Accumulator & Alternate Accumlator
        byte ra_ = 0;
        byte ra2_ = 0;

        // General purpose registers (BC, DE, HL)
        byte rb_ = 0;
        byte rd_ = 0;
        byte rh_ = 0;
        byte rf_ = 0;
        byte rc_ = 0;
        byte re_ = 0;
        byte rl_ = 0;

        // Alternate General purpose registers (BC' , DE' , HL' )

        byte rb2_ = 0;
        byte rd2_ = 0;
        byte rh2_ = 0;
        byte rf2_ = 0;
        byte rc2_ = 0;
        byte re2_ = 0;
        byte rl2_ = 0;

        //Special Registers (I , R, IX , IY , PC , SP)
        byte ri_ = 0;
        byte rr_ = 0;
        int rix_ = 0;
        int riy_ = 0;
        int rsp_ = 0;
        int rpc_ = 0;

        //Rotate bits
        byte rhl()
        {
            return (byte)(rh_ + 8 & rl_);
        }
        byte rbc()
        {
            return (byte)(rb_ + 8 & rc_);
        }
        byte rde()
        {
            return (byte)(rd_ + 8 & re_);
        }

        //Assign Flags
        bool fc()
        {
            return (rf_ & FLAG_C) > 0;
        }
        bool fn()
        {
            return (rf_ & FLAG_N) > 0;
        }
        bool fpv()
        {
            return (rf_ & FLAG_PV) > 0;
        }
        bool fh()
        {
            return (rf_ & FLAG_H) > 0;
        }
        bool fz()
        {
            return (rf_ & FLAG_Z) > 0;
        }
        bool fs()
        {
            return (rf_ & FLAG_S) > 0;
        }
        ////////////////////// ALU Functions /////////////////////////////

        byte op_add(byte a, byte b)
        {
            return w_calc_flags(a + b, false);
        }
        byte op_adc(byte a, byte b)
        {
            return w_calc_flags(a + b + (rf_ & 0x01), false);
        }
        byte op_sub(byte a, byte b)
        {
            return w_calc_flags(a - b, true);
        }
        byte op_sbc(byte a, byte b)
        {
            return w_calc_flags(a - b - (rf_ & 0x01), true);
        }
        byte op_and(byte a, byte b)
        {
            return w_logic_flags((byte)(a & b));
        }
        byte op_xor(byte a, byte b)
        {
            return w_logic_flags((byte)(a ^ b));
        }
        byte op_or(byte a, byte b)
        {
            return w_logic_flags((byte)(a | b));
        }
        void op_cp(byte a)
        {
            w_calc_flags(ra_ - a, true);
        }
        byte op_inc(byte a)
        {
            return w_calc_flags(a + 1, false);
        }
        byte op_dec(byte a)
        {
            return w_calc_flags(a - 1, false);
        }

        //////////////////////Program Counter & Program Memory /////////////////////////////

        byte next()
        {
            var cmd = read(rpc_++);
            return cmd;
        }
        int next16()
        {
            return ((int)next() + 8) | next();
        }
        byte read(int addr)
        {
            byte data = 0;
            if (addr < 0x4000)//ROM
            {
                data = rom[addr];
            }
            else if (addr < 0x5800)//scr_picsel_RAM
            {
                //data = Read_Picsel_RAM(a);
            }
            else if (addr < 0x5B00)//scr_atr_RAM
            {
                //data = Read_Atr_RAM(a);
            }
            else
            {
                data = ram_[addr - 0x5B00];//RAM
            }
            return data;
        }

        void write(int addr, byte val)
        {
            if (addr < 0x4000)//ROM
            {
            }
            else if (addr < 0x5800)//scr_picsel_RAM
            {
                Write_Picsel_RAM(addr, val);
            }
            else if (addr < 0x5B00)//scr_atr_RAM
            {
                //Write_Atr_RAM(addr, val);
            }
            else
            {
                ram_[addr - 0x5B00] = val;//RAM
            }
            //ram_[addr] = val;
        }

        void step()
        {
            int tmp;
            int tmp16;
            String cerr = "Error :\n";

            byte code;
            switch (code = next())
            {
                case (byte)Op.LD_A_A: break;
                case (byte)Op.LD_A_B: ra_ = rb_; break;
                case (byte)Op.LD_A_C: ra_ = rc_; break;
                case (byte)Op.LD_A_D: ra_ = rd_; break;
                case (byte)Op.LD_A_E: ra_ = re_; break;
                case (byte)Op.LD_A_F: ra_ = rf_; break;
                case (byte)Op.LD_A_L: ra_ = rl_; break;
                case (byte)Op.LD_B_A: rb_ = ra_; break;
                case (byte)Op.LD_B_B: break;
                case (byte)Op.LD_B_C: rb_ = rc_; break;
                case (byte)Op.LD_B_D: rb_ = rd_; break;
                case (byte)Op.LD_B_E: rb_ = re_; break;
                case (byte)Op.LD_B_F: rb_ = rf_; break;
                case (byte)Op.LD_B_L: rb_ = rl_; break;
                case (byte)Op.LD_C_A: rc_ = ra_; break;
                case (byte)Op.LD_C_B: rc_ = rb_; break;
                case (byte)Op.LD_C_C: break;
                case (byte)Op.LD_C_D: rc_ = rd_; break;
                case (byte)Op.LD_C_E: rc_ = re_; break;
                case (byte)Op.LD_C_F: rc_ = rf_; break;
                case (byte)Op.LD_C_L: rc_ = rl_; break;
                case (byte)Op.LD_D_A: rd_ = ra_; break;
                case (byte)Op.LD_D_B: rd_ = rb_; break;
                case (byte)Op.LD_D_C: rd_ = rc_; break;
                case (byte)Op.LD_D_D: break;
                case (byte)Op.LD_D_E: rd_ = re_; break;
                case (byte)Op.LD_D_F: rd_ = rf_; break;
                case (byte)Op.LD_D_L: rd_ = rl_; break;
                case (byte)Op.LD_E_A: re_ = ra_; break;
                case (byte)Op.LD_E_B: re_ = rb_; break;
                case (byte)Op.LD_E_C: re_ = rc_; break;
                case (byte)Op.LD_E_D: re_ = rd_; break;
                case (byte)Op.LD_E_E: break;
                case (byte)Op.LD_E_F: re_ = rf_; break;
                case (byte)Op.LD_E_L: re_ = rl_; break;
                case (byte)Op.LD_H_A: rh_ = ra_; break;
                case (byte)Op.LD_H_B: rh_ = rb_; break;
                case (byte)Op.LD_H_C: rh_ = rc_; break;
                case (byte)Op.LD_H_D: rh_ = rd_; break;
                case (byte)Op.LD_H_E: rh_ = re_; break;
                case (byte)Op.LD_H_F: rh_ = rf_; break;
                case (byte)Op.LD_H_L: rf_ = rl_; break;
                case (byte)Op.LD_L_A: rl_ = ra_; break;
                case (byte)Op.LD_L_B: rl_ = rb_; break;
                case (byte)Op.LD_L_C: rl_ = rc_; break;
                case (byte)Op.LD_L_D: rl_ = rd_; break;
                case (byte)Op.LD_L_E: rl_ = re_; break;
                case (byte)Op.LD_L_F: rl_ = rf_; break;
                case (byte)Op.LD_L_L: break;
                case (byte)Op.LD_A_ind_HL: ra_ = read(rhl()); break;
                case (byte)Op.LD_A_ind_BC: ra_ = read(rbc()); break;
                case (byte)Op.LD_A_ind_DE: ra_ = read(rde()); break;
                case (byte)Op.LD_B_ind_HL: rb_ = read(rhl()); break;
                case (byte)Op.LD_C_ind_HL: rc_ = read(rhl()); break;
                case (byte)Op.LD_D_ind_HL: rd_ = read(rhl()); break;
                case (byte)Op.LD_E_ind_HL: re_ = read(rhl()); break;
                case (byte)Op.LD_H_ind_HL: rh_ = read(rhl()); break;
                case (byte)Op.LD_L_ind_HL: rl_ = read(rhl()); break;
                case (byte)Op.LD_ind_HL_A: write(rhl(), ra_); break;
                case (byte)Op.LD_ind_HL_B: write(rhl(), rb_); break;
                case (byte)Op.LD_ind_HL_C: write(rhl(), rc_); break;
                case (byte)Op.LD_ind_HL_D: write(rhl(), rd_); break;
                case (byte)Op.LD_ind_HL_E: write(rhl(), re_); break;
                case (byte)Op.LD_ind_HL_F: write(rhl(), rf_); break;
                case (byte)Op.LD_ind_HL_L: write(rhl(), rl_); break;
                case (byte)Op.LD_ind_BC_A: write(rbc(), ra_); break;
                case (byte)Op.LD_ind_DE_A: write(rde(), ra_); break;
                case (byte)Op.LD_ext_A: write(next16(), ra_); break;
                case (byte)Op.ADD_A_A: ra_ = op_add(ra_, ra_); break;
                case (byte)Op.ADD_A_B: ra_ = op_add(ra_, rb_); break;
                case (byte)Op.ADD_A_C: ra_ = op_add(ra_, rc_); break;
                case (byte)Op.ADD_A_D: ra_ = op_add(ra_, rd_); break;
                case (byte)Op.ADD_A_E: ra_ = op_add(ra_, re_); break;
                case (byte)Op.ADD_A_F: ra_ = op_add(ra_, rf_); break;
                case (byte)Op.ADD_A_L: ra_ = op_add(ra_, rl_); break;
                case (byte)Op.ADD_A_ind_HL: ra_ = op_add(ra_, read(rhl())); break;
                case (byte)Op.ADD_A_imm: ra_ = op_add(ra_, next()); break;
                case (byte)Op.ADC_A_A: ra_ = op_adc(ra_, ra_); break;
                case (byte)Op.ADC_A_B: ra_ = op_adc(ra_, rb_); break;
                case (byte)Op.ADC_A_C: ra_ = op_adc(ra_, rc_); break;
                case (byte)Op.ADC_A_D: ra_ = op_adc(ra_, rd_); break;
                case (byte)Op.ADC_A_E: ra_ = op_adc(ra_, re_); break;
                case (byte)Op.ADC_A_F: ra_ = op_adc(ra_, rf_); break;
                case (byte)Op.ADC_A_L: ra_ = op_adc(ra_, rl_); break;
                case (byte)Op.ADC_A_ind_HL: ra_ = op_adc(ra_, read(rhl())); break;
                case (byte)Op.ADC_A_imm: ra_ = op_adc(ra_, next()); break;
                case (byte)Op.SUB_A_A: ra_ = op_sub(ra_, ra_); break;
                case (byte)Op.SUB_A_B: ra_ = op_sub(ra_, rb_); break;
                case (byte)Op.SUB_A_C: ra_ = op_sub(ra_, rc_); break;
                case (byte)Op.SUB_A_D: ra_ = op_sub(ra_, rd_); break;
                case (byte)Op.SUB_A_E: ra_ = op_sub(ra_, re_); break;
                case (byte)Op.SUB_A_F: ra_ = op_sub(ra_, rf_); break;
                case (byte)Op.SUB_A_L: ra_ = op_sub(ra_, rl_); break;
                case (byte)Op.SUB_A_ind_HL: ra_ = op_sub(ra_, read(rhl())); break;
                case (byte)Op.SUB_A_imm: ra_ = op_sub(ra_, next()); break;
                case (byte)Op.SBC_A_A: ra_ = op_sbc(ra_, ra_); break;
                case (byte)Op.SBC_A_B: ra_ = op_sbc(ra_, rb_); break;
                case (byte)Op.SBC_A_C: ra_ = op_sbc(ra_, rc_); break;
                case (byte)Op.SBC_A_D: ra_ = op_sbc(ra_, rd_); break;
                case (byte)Op.SBC_A_E: ra_ = op_sbc(ra_, re_); break;
                case (byte)Op.SBC_A_F: ra_ = op_sbc(ra_, rf_); break;
                case (byte)Op.SBC_A_L: ra_ = op_sbc(ra_, rl_); break;
                case (byte)Op.SBC_A_ind_HL: ra_ = op_sbc(ra_, read(rhl())); break;
                case (byte)Op.SBC_A_imm: ra_ = op_sbc(ra_, next()); break;
                case (byte)Op.AND_A_A: ra_ = op_and(ra_, ra_); break;
                case (byte)Op.AND_A_B: ra_ = op_and(ra_, rb_); break;
                case (byte)Op.AND_A_C: ra_ = op_and(ra_, rc_); break;
                case (byte)Op.AND_A_D: ra_ = op_and(ra_, rd_); break;
                case (byte)Op.AND_A_E: ra_ = op_and(ra_, re_); break;
                case (byte)Op.AND_A_F: ra_ = op_and(ra_, rf_); break;
                case (byte)Op.AND_A_L: ra_ = op_and(ra_, rl_); break;
                case (byte)Op.AND_A_ind_HL: ra_ = op_and(ra_, read(rhl())); break;
                case (byte)Op.AND_A_imm: ra_ = op_and(ra_, next()); break;
                case (byte)Op.XOR_A_A: ra_ = op_xor(ra_, ra_); break;
                case (byte)Op.XOR_A_B: ra_ = op_xor(ra_, rb_); break;
                case (byte)Op.XOR_A_C: ra_ = op_xor(ra_, rc_); break;
                case (byte)Op.XOR_A_D: ra_ = op_xor(ra_, rd_); break;
                case (byte)Op.XOR_A_E: ra_ = op_xor(ra_, re_); break;
                case (byte)Op.XOR_A_F: ra_ = op_xor(ra_, rf_); break;
                case (byte)Op.XOR_A_L: ra_ = op_xor(ra_, rl_); break;
                case (byte)Op.XOR_A_ind_HL: ra_ = op_xor(ra_, read(rhl())); break;
                case (byte)Op.XOR_A_imm: ra_ = op_xor(ra_, next()); break;
                case (byte)Op.OR_A_A: ra_ = op_or(ra_, ra_); break;
                case (byte)Op.OR_A_B: ra_ = op_or(ra_, rb_); break;
                case (byte)Op.OR_A_C: ra_ = op_or(ra_, rc_); break;
                case (byte)Op.OR_A_D: ra_ = op_or(ra_, rd_); break;
                case (byte)Op.OR_A_E: ra_ = op_or(ra_, re_); break;
                case (byte)Op.OR_A_F: ra_ = op_or(ra_, rf_); break;
                case (byte)Op.OR_A_L: ra_ = op_or(ra_, rl_); break;
                case (byte)Op.OR_A_ind_HL: ra_ = op_or(ra_, read(rhl())); break;
                case (byte)Op.OR_A_imm: ra_ = op_or(ra_, next()); break;
                case (byte)Op.CP_A: op_cp(ra_); break;
                case (byte)Op.CP_B: op_cp(rb_); break;
                case (byte)Op.CP_C: op_cp(rc_); break;
                case (byte)Op.CP_D: op_cp(rd_); break;
                case (byte)Op.CP_E: op_cp(re_); break;
                case (byte)Op.CP_F: op_cp(rf_); break;
                case (byte)Op.CP_L: op_cp(rl_); break;
                case (byte)Op.CP_ind_HL: op_cp(read(rhl())); break;
                case (byte)Op.CP_imm: op_cp(next()); break;
                case (byte)Op.INC_A: ra_ = op_inc(ra_); break;
                case (byte)Op.INC_B: rb_ = op_inc(rb_); break;
                case (byte)Op.INC_C: rc_ = op_inc(rc_); break;
                case (byte)Op.INC_D: rd_ = op_inc(rd_); break;
                case (byte)Op.INC_E: re_ = op_inc(re_); break;
                case (byte)Op.INC_F: rf_ = op_inc(rf_); break;
                case (byte)Op.INC_L: rl_ = op_inc(rl_); break;
                case (byte)Op.INC_ind_HL: tmp = read(rhl()) + next(); write(tmp, op_inc(read(tmp))); break;
                case (byte)Op.DEC_A: ra_ = op_dec(ra_); break;
                case (byte)Op.DEC_B: rb_ = op_dec(rb_); break;
                case (byte)Op.DEC_C: rc_ = op_dec(rc_); break;
                case (byte)Op.DEC_D: rd_ = op_dec(rd_); break;
                case (byte)Op.DEC_E: re_ = op_dec(re_); break;
                case (byte)Op.DEC_F: rf_ = op_dec(rf_); break;
                case (byte)Op.DEC_L: rl_ = op_dec(rl_); break;
                case (byte)Op.DEC_ind_HL: tmp = read(rhl()) + next(); write(tmp, op_dec(read(tmp))); break;
                case (byte)Op.JP: rpc_ = next16(); break;
                case (byte)Op.JP_C: tmp16 = next16(); if (fc()) rpc_ = tmp16; break;
                case (byte)Op.JP_NC: tmp16 = next16(); if (!fc()) rpc_ = tmp16; break;
                case (byte)Op.JP_Z: tmp16 = next16(); if (fz()) rpc_ = tmp16; break;
                case (byte)Op.JP_NZ: tmp16 = next16(); if (!fz()) rpc_ = tmp16; break;
                case (byte)Op.JP_PO: tmp16 = next16(); if (!fpv()) rpc_ = tmp16; break;
                case (byte)Op.JP_PE: tmp16 = next16(); if (fpv()) rpc_ = tmp16; break;
                case (byte)Op.JP_M: tmp16 = next16(); if (fs()) rpc_ = tmp16; break;
                case (byte)Op.JP_P: tmp16 = next16(); if (!fs()) rpc_ = tmp16; break;
                case (byte)Op.JP_ind_HL: rpc_ = read(rhl()); break;
                case (byte)Op.JR: tmp = next(); rpc_ = tmp; break;
                case (byte)Op.JR_C: tmp = next(); if (fc()) rpc_ = tmp; break;
                case (byte)Op.JR_NC: tmp = next(); if (!fc()) rpc_ = tmp; break;
                case (byte)Op.JR_Z: tmp = next(); if (fz()) rpc_ = tmp; break;
                case (byte)Op.JR_NZ: tmp = next(); if (!fz()) rpc_ = tmp; break;
                case (byte)Op.DJNZ: tmp = next(); if (--rb_ != 0) rpc_ = tmp; break;
                case (byte)Op.OUT_nn_A: write_io(next(), ra_); break;
                case (byte)Op.IN_A_nn: ra_ = read_io(next()); break;

                case (byte)Op.EXT_DD:
                    switch (code = next())
                    {
                        case (byte)DDOp.DD_LD_B_imm: rb_ = next(); break;
                        case (byte)DDOp.DD_LD_C_imm: rc_ = next(); break;
                        case (byte)DDOp.DD_LD_D_imm: rd_ = next(); break;
                        case (byte)DDOp.DD_LD_E_imm: re_ = next(); break;
                        case (byte)DDOp.DD_LD_H_imm: rh_ = next(); break;
                        case (byte)DDOp.DD_LD_A_idx_IY: ra_ = read(riy_ + next()); break;
                        case (byte)DDOp.DD_LD_B_idx_IX: rb_ = read(rix_ + next()); break;
                        case (byte)DDOp.DD_LD_C_idx_IX: rc_ = read(rix_ + next()); break;
                        case (byte)DDOp.DD_LD_D_idx_IX: rd_ = read(rix_ + next()); break;
                        case (byte)DDOp.DD_LD_E_idx_IX: re_ = read(rix_ + next()); break;
                        case (byte)DDOp.DD_LD_H_idx_IX: rh_ = read(rix_ + next()); break;
                        case (byte)DDOp.DD_LD_L_idx_IX: rl_ = read(rix_ + next()); break;
                        case (byte)DDOp.DD_LD_idx_IX_A: write(rix_ + next(), ra_); break;
                        case (byte)DDOp.DD_LD_idx_IX_B: write(rix_ + next(), rb_); break;
                        case (byte)DDOp.DD_LD_idx_IX_C: write(rix_ + next(), rc_); break;
                        case (byte)DDOp.DD_LD_idx_IX_D: write(rix_ + next(), rd_); break;
                        case (byte)DDOp.DD_LD_idx_IX_E: write(rix_ + next(), re_); break;
                        case (byte)DDOp.DD_LD_idx_IX_F: write(rix_ + next(), rf_); break;
                        case (byte)DDOp.DD_LD_idx_IX_L: write(rix_ + next(), rl_); break;
                        case (byte)DDOp.DD_LD_idx_IX_imm: write(rix_ + next(), next()); break;
                        case (byte)DDOp.DD_LD_ind_HL_imm: write(rhl(), next()); break;
                        case (byte)DDOp.DD_ADD_A_idx_IX: ra_ = op_add(ra_, read(rix_ + next())); break;
                        case (byte)DDOp.DD_ADC_A_idx_IX: ra_ = op_adc(ra_, read(rix_ + next())); break;
                        case (byte)DDOp.DD_SUB_A_idx_IX: ra_ = op_sub(ra_, read(rix_ + next())); break;
                        case (byte)DDOp.DD_SBC_A_idx_IX: ra_ = op_sbc(ra_, read(rix_ + next())); break;
                        case (byte)DDOp.DD_AND_A_idx_IX: ra_ = op_and(ra_, read(rix_ + next())); break;
                        case (byte)DDOp.DD_XOR_A_idx_IX: ra_ = op_xor(ra_, read(rix_ + next())); break;
                        case (byte)DDOp.DD_OR_A_idx_IX: ra_ = op_or(ra_, read(rix_ + next())); break;
                        case (byte)DDOp.DD_CP_idx_IX: op_cp(read(rix_ + next())); break;
                        case (byte)DDOp.DD_JP_ind_IX: rpc_ = read(rix_); break;

                        default:

                            break;
                    }
                    break;

                case (byte)Op.EXT_ED:
                    switch (next())
                    {
                        case (byte)EDOp.ED_LD_imp_I_A: ri_ = ra_; break;
                        case (byte)EDOp.ED_LD_imp_R_A: rr_ = ra_; break;

                        default:

                            break;
                    }
                    break;

                case (byte)Op.EXT_FD:
                    switch (code = next())
                    {
                        case (byte)FDOp.FD_LD_A_imm: ra_ = next(); break;
                        case (byte)FDOp.FD_LD_A_ext: ra_ = read(next16()); break;
                        case (byte)FDOp.FD_LD_A_idx_IX: ra_ = read(rix_ + next()); break;
                        case (byte)FDOp.FD_LD_B_idx_IY: rb_ = read(riy_ + next()); break;
                        case (byte)FDOp.FD_LD_C_idx_IY: rc_ = read(riy_ + next()); break;
                        case (byte)FDOp.FD_LD_D_idx_IY: rd_ = read(riy_ + next()); break;
                        case (byte)FDOp.FD_LD_E_idx_IY: re_ = read(riy_ + next()); break;
                        case (byte)FDOp.FD_LD_H_idx_IY: rh_ = read(riy_ + next()); break;
                        case (byte)FDOp.FD_LD_idx_IY_A: write(riy_ + next(), ra_); break;
                        case (byte)FDOp.FD_LD_idx_IY_B: write(riy_ + next(), rb_); break;
                        case (byte)FDOp.FD_LD_idx_IY_C: write(riy_ + next(), rc_); break;
                        case (byte)FDOp.FD_LD_idx_IY_D: write(riy_ + next(), rd_); break;
                        case (byte)FDOp.FD_LD_idx_IY_E: write(riy_ + next(), re_); break;
                        case (byte)FDOp.FD_LD_idx_IY_F: write(riy_ + next(), rf_); break;
                        case (byte)FDOp.FD_LD_idx_IY_L: write(riy_ + next(), rl_); break;
                        case (byte)FDOp.FD_LD_idx_IY_imm: write(riy_ + next(), next()); break;
                        case (byte)FDOp.FD_ADD_A_idx_IY: ra_ = op_add(ra_, read(riy_ + next())); break;
                        case (byte)FDOp.FD_ADC_A_idx_IY: ra_ = op_adc(ra_, read(riy_ + next())); break;
                        case (byte)FDOp.FD_SUB_A_idx_IY: ra_ = op_sub(ra_, read(riy_ + next())); break;
                        case (byte)FDOp.FD_SBC_A_idx_IY: ra_ = op_sbc(ra_, read(riy_ + next())); break;
                        case (byte)FDOp.FD_AND_A_idx_IY: ra_ = op_and(ra_, read(riy_ + next())); break;
                        case (byte)FDOp.FD_XOR_A_idx_IY: ra_ = op_xor(ra_, read(riy_ + next())); break;
                        case (byte)FDOp.FD_OR_A_idx_IY: ra_ = op_or(ra_, read(riy_ + next())); break;
                        case (byte)FDOp.FD_CP_idx_IY: op_cp(read(riy_ + next())); break;
                        case (byte)FDOp.FD_JP_ind_IY: rpc_ = read(riy_); break;

                        default:
                            break;
                    }

                    break;

                default:

                    break;
            }
        }

        public void run_to_nop()
        {
           
            while (read(rpc_) != -1)
            {
                step();
            }
        }


        byte w_calc_flags(int result, bool is_sub)
        {
            rf_ = 0;

            if ((result & 0x0100) != 0) rf_ |= FLAG_C;
            if (is_sub) rf_ |= FLAG_N;
            if (result > 0xFF) rf_ |= FLAG_PV;
            if ((result & 0x08) != 0) rf_ |= FLAG_H;
            if (result == 0) rf_ |= FLAG_Z;
            if ((result & 0x80) != 0) rf_ |= FLAG_S;

            return (byte)result;

        }

        byte w_logic_flags(byte result)
        {

            rf_ = 0;

            int x = result;

            x ^= x >> 4;
            x ^= x >> 2;
            x ^= x >> 1;

            bool parity = ((~x) & 0x01) == 0;

            if (parity) rf_ |= FLAG_PV;
            if (result == 0) rf_ |= FLAG_Z;
            if ((result & 0x80) != 0) rf_ |= FLAG_S;

            return result;

        }


        public void write_io(int addr, byte val)
        {
           
            write(addr, val);
        }

        public byte read_io(int addr)
        {
            return read(addr);
        }

        public void Write_Picsel_RAM(int baitRAM, byte picsel)
        {
            int stolbec;
            int stroka;

            int xpoz;
            int ypoz;

            byte atribut;
            int tone;
            int fone;

            byte bitcount;

            baitRAM = baitRAM - 0x4000;
            scr_picsel_RAM[baitRAM] = picsel;
            stolbec = (byte)(baitRAM & 0x1F);
            xpoz = (stolbec * 8) + 0x20;
            ypoz = (scr_ypoz[baitRAM / 32]);
            stroka = ypoz / 8;
            ypoz = ypoz + 0x18;

            atribut = scr_atr_RAM[(stroka * 32) + stolbec];
            tone = scr_Color[((atribut & 64) >> 3) | (atribut & 7)];
            fone = scr_Color[(atribut & 120) >> 3];

            //LCD_SetCursor(xpoz, ypoz);
            //LCD_WriteRAM_Prepare();

            bitcount = 8;
            do
            {
                bitcount--;
                if (((scr_picsel_RAM[baitRAM]) & (1 << bitcount)) != 0)
                {
                   // DrawPixel(xpoz, ypoz, tone);
                }
                else
                {
                    //DrawPixel(xpoz, ypoz, fone);//LCD_WriteRAM(fone);
                }
            } while (bitcount != 0);
        }

        public Color ToColor(uint argb)
        {
            return Color.FromArgb((byte)((argb & -16777216) >> 0x18),
                                  (byte)((argb & 0xff0000) >> 0x10),
                                  (byte)((argb & 0xff00) >> 8),
                                  (byte)(argb & 0xff));
        }
        private void DrawPixel(int fromX, int fromY, int color)
        {
            var _line = new Line();
            _line.Stroke = new SolidColorBrush(ToColor((uint)color));
            _line.StrokeThickness = 2;
            _line.StrokeStartLineCap = PenLineCap.Round;

            _line.StrokeEndLineCap = PenLineCap.Round;
            _line.StrokeDashCap = PenLineCap.Round;

            _line.X1 = fromX;
            _line.Y1 = fromY;
            _line.X2 = fromX + 1;
            _line.Y2 = fromY + 1;

            screenCanvas.Children.Add(_line);
        }

        int[] scr_Color = new int[16]{//Массив цветов
0x0000, 0x000F, 0x7800, 0x780F, 0x03E0, 0x03EF, 0x7BE0, 0x7BEF,
0x0000, 0x001F, 0xF800, 0xF81F, 0x07E0, 0x07FF, 0xFFE0, 0xFFFF
};


        private byte[] rom = new byte[16384]
          {
            0xF3,0xAF,0x11,0xFF,0xFF,0xC3,0xCB,0x11,0x2A,0x5D,0x5C,0x22,0x5F,0x5C,0x18,0x43,
0xC3,0xF2,0x15,0xFF,0xFF,0xFF,0xFF,0xFF,0x2A,0x5D,0x5C,0x7E,0xCD,0x7D,0x00,0xD0,
0xCD,0x74,0x00,0x18,0xF7,0xFF,0xFF,0xFF,0xC3,0x5B,0x33,0xFF,0xFF,0xFF,0xFF,0xFF,
0xC5,0x2A,0x61,0x5C,0xE5,0xC3,0x9E,0x16,0xF5,0xE5,0x2A,0x78,0x5C,0x23,0x22,0x78,
0x5C,0x7C,0xB5,0x20,0x03,0xFD,0x34,0x40,0xC5,0xD5,0xCD,0xBF,0x02,0xD1,0xC1,0xE1,
0xF1,0xFB,0xC9,0xE1,0x6E,0xFD,0x75,0x00,0xED,0x7B,0x3D,0x5C,0xC3,0xC5,0x16,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF5,0xE5,0x2A,0xB0,0x5C,0x7C,0xB5,0x20,0x01,0xE9,
0xE1,0xF1,0xED,0x45,0x2A,0x5D,0x5C,0x23,0x22,0x5D,0x5C,0x7E,0xC9,0xFE,0x21,0xD0,
0xFE,0x0D,0xC8,0xFE,0x10,0xD8,0xFE,0x18,0x3F,0xD8,0x23,0xFE,0x16,0x38,0x01,0x23,
0x37,0x22,0x5D,0x5C,0xC9,0xBF,0x52,0x4E,0xC4,0x49,0x4E,0x4B,0x45,0x59,0xA4,0x50,
0xC9,0x46,0xCE,0x50,0x4F,0x49,0x4E,0xD4,0x53,0x43,0x52,0x45,0x45,0x4E,0xA4,0x41,
0x54,0x54,0xD2,0x41,0xD4,0x54,0x41,0xC2,0x56,0x41,0x4C,0xA4,0x43,0x4F,0x44,0xC5,
0x56,0x41,0xCC,0x4C,0x45,0xCE,0x53,0x49,0xCE,0x43,0x4F,0xD3,0x54,0x41,0xCE,0x41,
0x53,0xCE,0x41,0x43,0xD3,0x41,0x54,0xCE,0x4C,0xCE,0x45,0x58,0xD0,0x49,0x4E,0xD4,
0x53,0x51,0xD2,0x53,0x47,0xCE,0x41,0x42,0xD3,0x50,0x45,0x45,0xCB,0x49,0xCE,0x55,
0x53,0xD2,0x53,0x54,0x52,0xA4,0x43,0x48,0x52,0xA4,0x4E,0x4F,0xD4,0x42,0x49,0xCE,
0x4F,0xD2,0x41,0x4E,0xC4,0x3C,0xBD,0x3E,0xBD,0x3C,0xBE,0x4C,0x49,0x4E,0xC5,0x54,
0x48,0x45,0xCE,0x54,0xCF,0x53,0x54,0x45,0xD0,0x44,0x45,0x46,0x20,0x46,0xCE,0x43,
0x41,0xD4,0x46,0x4F,0x52,0x4D,0x41,0xD4,0x4D,0x4F,0x56,0xC5,0x45,0x52,0x41,0x53,
0xC5,0x4F,0x50,0x45,0x4E,0x20,0xA3,0x43,0x4C,0x4F,0x53,0x45,0x20,0xA3,0x4D,0x45,
0x52,0x47,0xC5,0x56,0x45,0x52,0x49,0x46,0xD9,0x42,0x45,0x45,0xD0,0x43,0x49,0x52,
0x43,0x4C,0xC5,0x49,0x4E,0xCB,0x50,0x41,0x50,0x45,0xD2,0x46,0x4C,0x41,0x53,0xC8,
0x42,0x52,0x49,0x47,0x48,0xD4,0x49,0x4E,0x56,0x45,0x52,0x53,0xC5,0x4F,0x56,0x45,
0xD2,0x4F,0x55,0xD4,0x4C,0x50,0x52,0x49,0x4E,0xD4,0x4C,0x4C,0x49,0x53,0xD4,0x53,
0x54,0x4F,0xD0,0x52,0x45,0x41,0xC4,0x44,0x41,0x54,0xC1,0x52,0x45,0x53,0x54,0x4F,
0x52,0xC5,0x4E,0x45,0xD7,0x42,0x4F,0x52,0x44,0x45,0xD2,0x43,0x4F,0x4E,0x54,0x49,
0x4E,0x55,0xC5,0x44,0x49,0xCD,0x52,0x45,0xCD,0x46,0x4F,0xD2,0x47,0x4F,0x20,0x54,
0xCF,0x47,0x4F,0x20,0x53,0x55,0xC2,0x49,0x4E,0x50,0x55,0xD4,0x4C,0x4F,0x41,0xC4,
0x4C,0x49,0x53,0xD4,0x4C,0x45,0xD4,0x50,0x41,0x55,0x53,0xC5,0x4E,0x45,0x58,0xD4,
0x50,0x4F,0x4B,0xC5,0x50,0x52,0x49,0x4E,0xD4,0x50,0x4C,0x4F,0xD4,0x52,0x55,0xCE,
0x53,0x41,0x56,0xC5,0x52,0x41,0x4E,0x44,0x4F,0x4D,0x49,0x5A,0xC5,0x49,0xC6,0x43,
0x4C,0xD3,0x44,0x52,0x41,0xD7,0x43,0x4C,0x45,0x41,0xD2,0x52,0x45,0x54,0x55,0x52,
0xCE,0x43,0x4F,0x50,0xD9,0x42,0x48,0x59,0x36,0x35,0x54,0x47,0x56,0x4E,0x4A,0x55,
0x37,0x34,0x52,0x46,0x43,0x4D,0x4B,0x49,0x38,0x33,0x45,0x44,0x58,0x0E,0x4C,0x4F,
0x39,0x32,0x57,0x53,0x5A,0x20,0x0D,0x50,0x30,0x31,0x51,0x41,0xE3,0xC4,0xE0,0xE4,
0xB4,0xBC,0xBD,0xBB,0xAF,0xB0,0xB1,0xC0,0xA7,0xA6,0xBE,0xAD,0xB2,0xBA,0xE5,0xA5,
0xC2,0xE1,0xB3,0xB9,0xC1,0xB8,0x7E,0xDC,0xDA,0x5C,0xB7,0x7B,0x7D,0xD8,0xBF,0xAE,
0xAA,0xAB,0xDD,0xDE,0xDF,0x7F,0xB5,0xD6,0x7C,0xD5,0x5D,0xDB,0xB6,0xD9,0x5B,0xD7,
0x0C,0x07,0x06,0x04,0x05,0x08,0x0A,0x0B,0x09,0x0F,0xE2,0x2A,0x3F,0xCD,0xC8,0xCC,
0xCB,0x5E,0xAC,0x2D,0x2B,0x3D,0x2E,0x2C,0x3B,0x22,0xC7,0x3C,0xC3,0x3E,0xC5,0x2F,
0xC9,0x60,0xC6,0x3A,0xD0,0xCE,0xA8,0xCA,0xD3,0xD4,0xD1,0xD2,0xA9,0xCF,0x2E,0x2F,
0x11,0xFF,0xFF,0x01,0xFE,0xFE,0xED,0x78,0x2F,0xE6,0x1F,0x28,0x0E,0x67,0x7D,0x14,
0xC0,0xD6,0x08,0xCB,0x3C,0x30,0xFA,0x53,0x5F,0x20,0xF4,0x2D,0xCB,0x00,0x38,0xE6,
0x7A,0x3C,0xC8,0xFE,0x28,0xC8,0xFE,0x19,0xC8,0x7B,0x5A,0x57,0xFE,0x18,0xC9,0xCD,
0x8E,0x02,0xC0,0x21,0x00,0x5C,0xCB,0x7E,0x20,0x07,0x23,0x35,0x2B,0x20,0x02,0x36,
0xFF,0x7D,0x21,0x04,0x5C,0xBD,0x20,0xEE,0xCD,0x1E,0x03,0xD0,0x21,0x00,0x5C,0xBE,
0x28,0x2E,0xEB,0x21,0x04,0x5C,0xBE,0x28,0x27,0xCB,0x7E,0x20,0x04,0xEB,0xCB,0x7E,
0xC8,0x5F,0x77,0x23,0x36,0x05,0x23,0x3A,0x09,0x5C,0x77,0x23,0xFD,0x4E,0x07,0xFD,
0x56,0x01,0xE5,0xCD,0x33,0x03,0xE1,0x77,0x32,0x08,0x5C,0xFD,0xCB,0x01,0xEE,0xC9,
0x23,0x36,0x05,0x23,0x35,0xC0,0x3A,0x0A,0x5C,0x77,0x23,0x7E,0x18,0xEA,0x42,0x16,
0x00,0x7B,0xFE,0x27,0xD0,0xFE,0x18,0x20,0x03,0xCB,0x78,0xC0,0x21,0x05,0x02,0x19,
0x7E,0x37,0xC9,0x7B,0xFE,0x3A,0x38,0x2F,0x0D,0xFA,0x4F,0x03,0x28,0x03,0xC6,0x4F,
0xC9,0x21,0xEB,0x01,0x04,0x28,0x03,0x21,0x05,0x02,0x16,0x00,0x19,0x7E,0xC9,0x21,
0x29,0x02,0xCB,0x40,0x28,0xF4,0xCB,0x5A,0x28,0x0A,0xFD,0xCB,0x30,0x5E,0xC0,0x04,
0xC0,0xC6,0x20,0xC9,0xC6,0xA5,0xC9,0xFE,0x30,0xD8,0x0D,0xFA,0x9D,0x03,0x20,0x19,
0x21,0x54,0x02,0xCB,0x68,0x28,0xD3,0xFE,0x38,0x30,0x07,0xD6,0x20,0x04,0xC8,0xC6,
0x08,0xC9,0xD6,0x36,0x04,0xC8,0xC6,0xFE,0xC9,0x21,0x30,0x02,0xFE,0x39,0x28,0xBA,
0xFE,0x30,0x28,0xB6,0xE6,0x07,0xC6,0x80,0x04,0xC8,0xEE,0x0F,0xC9,0x04,0xC8,0xCB,
0x68,0x21,0x30,0x02,0x20,0xA4,0xD6,0x10,0xFE,0x22,0x28,0x06,0xFE,0x20,0xC0,0x3E,
0x5F,0xC9,0x3E,0x40,0xC9,0xF3,0x7D,0xCB,0x3D,0xCB,0x3D,0x2F,0xE6,0x03,0x4F,0x06,
0x00,0xDD,0x21,0xD1,0x03,0xDD,0x09,0x3A,0x48,0x5C,0xE6,0x38,0x0F,0x0F,0x0F,0xF6,
0x08,0x00,0x00,0x00,0x04,0x0C,0x0D,0x20,0xFD,0x0E,0x3F,0x05,0xC2,0xD6,0x03,0xEE,
0x10,0xD3,0xFE,0x44,0x4F,0xCB,0x67,0x20,0x09,0x7A,0xB3,0x28,0x09,0x79,0x4D,0x1B,
0xDD,0xE9,0x4D,0x0C,0xDD,0xE9,0xFB,0xC9,0xEF,0x31,0x27,0xC0,0x03,0x34,0xEC,0x6C,
0x98,0x1F,0xF5,0x04,0xA1,0x0F,0x38,0x21,0x92,0x5C,0x7E,0xA7,0x20,0x5E,0x23,0x4E,
0x23,0x46,0x78,0x17,0x9F,0xB9,0x20,0x54,0x23,0xBE,0x20,0x50,0x78,0xC6,0x3C,0xF2,
0x25,0x04,0xE2,0x6C,0x04,0x06,0xFA,0x04,0xD6,0x0C,0x30,0xFB,0xC6,0x0C,0xC5,0x21,
0x6E,0x04,0xCD,0x06,0x34,0xCD,0xB4,0x33,0xEF,0x04,0x38,0xF1,0x86,0x77,0xEF,0xC0,
0x02,0x31,0x38,0xCD,0x94,0x1E,0xFE,0x0B,0x30,0x22,0xEF,0xE0,0x04,0xE0,0x34,0x80,
0x43,0x55,0x9F,0x80,0x01,0x05,0x34,0x35,0x71,0x03,0x38,0xCD,0x99,0x1E,0xC5,0xCD,
0x99,0x1E,0xE1,0x50,0x59,0x7A,0xB3,0xC8,0x1B,0xC3,0xB5,0x03,0xCF,0x0A,0x89,0x02,
0xD0,0x12,0x86,0x89,0x0A,0x97,0x60,0x75,0x89,0x12,0xD5,0x17,0x1F,0x89,0x1B,0x90,
0x41,0x02,0x89,0x24,0xD0,0x53,0xCA,0x89,0x2E,0x9D,0x36,0xB1,0x89,0x38,0xFF,0x49,
0x3E,0x89,0x43,0xFF,0x6A,0x73,0x89,0x4F,0xA7,0x00,0x54,0x89,0x5C,0x00,0x00,0x00,
0x89,0x69,0x14,0xF6,0x24,0x89,0x76,0xF1,0x10,0x05,0xCD,0xFB,0x24,0x3A,0x3B,0x5C,
0x87,0xFA,0x8A,0x1C,0xE1,0xD0,0xE5,0xCD,0xF1,0x2B,0x62,0x6B,0x0D,0xF8,0x09,0xCB,
0xFE,0xC9,0x21,0x3F,0x05,0xE5,0x21,0x80,0x1F,0xCB,0x7F,0x28,0x03,0x21,0x98,0x0C,
0x08,0x13,0xDD,0x2B,0xF3,0x3E,0x02,0x47,0x10,0xFE,0xD3,0xFE,0xEE,0x0F,0x06,0xA4,
0x2D,0x20,0xF5,0x05,0x25,0xF2,0xD8,0x04,0x06,0x2F,0x10,0xFE,0xD3,0xFE,0x3E,0x0D,
0x06,0x37,0x10,0xFE,0xD3,0xFE,0x01,0x0E,0x3B,0x08,0x6F,0xC3,0x07,0x05,0x7A,0xB3,
0x28,0x0C,0xDD,0x6E,0x00,0x7C,0xAD,0x67,0x3E,0x01,0x37,0xC3,0x25,0x05,0x6C,0x18,
0xF4,0x79,0xCB,0x78,0x10,0xFE,0x30,0x04,0x06,0x42,0x10,0xFE,0xD3,0xFE,0x06,0x3E,
0x20,0xEF,0x05,0xAF,0x3C,0xCB,0x15,0xC2,0x14,0x05,0x1B,0xDD,0x23,0x06,0x31,0x3E,
0x7F,0xDB,0xFE,0x1F,0xD0,0x7A,0x3C,0xC2,0xFE,0x04,0x06,0x3B,0x10,0xFE,0xC9,0xF5,
0x3A,0x48,0x5C,0xE6,0x38,0x0F,0x0F,0x0F,0xD3,0xFE,0x3E,0x7F,0xDB,0xFE,0x1F,0xFB,
0x38,0x02,0xCF,0x0C,0xF1,0xC9,0x14,0x08,0x15,0xF3,0x3E,0x0F,0xD3,0xFE,0x21,0x3F,
0x05,0xE5,0xDB,0xFE,0x1F,0xE6,0x20,0xF6,0x02,0x4F,0xBF,0xC0,0xCD,0xE7,0x05,0x30,
0xFA,0x21,0x15,0x04,0x10,0xFE,0x2B,0x7C,0xB5,0x20,0xF9,0xCD,0xE3,0x05,0x30,0xEB,
0x06,0x9C,0xCD,0xE3,0x05,0x30,0xE4,0x3E,0xC6,0xB8,0x30,0xE0,0x24,0x20,0xF1,0x06,
0xC9,0xCD,0xE7,0x05,0x30,0xD5,0x78,0xFE,0xD4,0x30,0xF4,0xCD,0xE7,0x05,0xD0,0x79,
0xEE,0x03,0x4F,0x26,0x00,0x06,0xB0,0x18,0x1F,0x08,0x20,0x07,0x30,0x0F,0xDD,0x75,
0x00,0x18,0x0F,0xCB,0x11,0xAD,0xC0,0x79,0x1F,0x4F,0x13,0x18,0x07,0xDD,0x7E,0x00,
0xAD,0xC0,0xDD,0x23,0x1B,0x08,0x06,0xB2,0x2E,0x01,0xCD,0xE3,0x05,0xD0,0x3E,0xCB,
0xB8,0xCB,0x15,0x06,0xB0,0xD2,0xCA,0x05,0x7C,0xAD,0x67,0x7A,0xB3,0x20,0xCA,0x7C,
0xFE,0x01,0xC9,0xCD,0xE7,0x05,0xD0,0x3E,0x16,0x3D,0x20,0xFD,0xA7,0x04,0xC8,0x3E,
0x7F,0xDB,0xFE,0x1F,0xD0,0xA9,0xE6,0x20,0x28,0xF3,0x79,0x2F,0x4F,0xE6,0x07,0xF6,
0x08,0xD3,0xFE,0x37,0xC9,0xF1,0x3A,0x74,0x5C,0xD6,0xE0,0x32,0x74,0x5C,0xCD,0x8C,
0x1C,0xCD,0x30,0x25,0x28,0x3C,0x01,0x11,0x00,0x3A,0x74,0x5C,0xA7,0x28,0x02,0x0E,
0x22,0xF7,0xD5,0xDD,0xE1,0x06,0x0B,0x3E,0x20,0x12,0x13,0x10,0xFC,0xDD,0x36,0x01,
0xFF,0xCD,0xF1,0x2B,0x21,0xF6,0xFF,0x0B,0x09,0x03,0x30,0x0F,0x3A,0x74,0x5C,0xA7,
0x20,0x02,0xCF,0x0E,0x78,0xB1,0x28,0x0A,0x01,0x0A,0x00,0xDD,0xE5,0xE1,0x23,0xEB,
0xED,0xB0,0xDF,0xFE,0xE4,0x20,0x49,0x3A,0x74,0x5C,0xFE,0x03,0xCA,0x8A,0x1C,0xE7,
0xCD,0xB2,0x28,0xCB,0xF9,0x30,0x0B,0x21,0x00,0x00,0x3A,0x74,0x5C,0x3D,0x28,0x15,
0xCF,0x01,0xC2,0x8A,0x1C,0xCD,0x30,0x25,0x28,0x18,0x23,0x7E,0xDD,0x77,0x0B,0x23,
0x7E,0xDD,0x77,0x0C,0x23,0xDD,0x71,0x0E,0x3E,0x01,0xCB,0x71,0x28,0x01,0x3C,0xDD,
0x77,0x00,0xEB,0xE7,0xFE,0x29,0x20,0xDA,0xE7,0xCD,0xEE,0x1B,0xEB,0xC3,0x5A,0x07,
0xFE,0xAA,0x20,0x1F,0x3A,0x74,0x5C,0xFE,0x03,0xCA,0x8A,0x1C,0xE7,0xCD,0xEE,0x1B,
0xDD,0x36,0x0B,0x00,0xDD,0x36,0x0C,0x1B,0x21,0x00,0x40,0xDD,0x75,0x0D,0xDD,0x74,
0x0E,0x18,0x4D,0xFE,0xAF,0x20,0x4F,0x3A,0x74,0x5C,0xFE,0x03,0xCA,0x8A,0x1C,0xE7,
0xCD,0x48,0x20,0x20,0x0C,0x3A,0x74,0x5C,0xA7,0xCA,0x8A,0x1C,0xCD,0xE6,0x1C,0x18,
0x0F,0xCD,0x82,0x1C,0xDF,0xFE,0x2C,0x28,0x0C,0x3A,0x74,0x5C,0xA7,0xCA,0x8A,0x1C,
0xCD,0xE6,0x1C,0x18,0x04,0xE7,0xCD,0x82,0x1C,0xCD,0xEE,0x1B,0xCD,0x99,0x1E,0xDD,
0x71,0x0B,0xDD,0x70,0x0C,0xCD,0x99,0x1E,0xDD,0x71,0x0D,0xDD,0x70,0x0E,0x60,0x69,
0xDD,0x36,0x00,0x03,0x18,0x44,0xFE,0xCA,0x28,0x09,0xCD,0xEE,0x1B,0xDD,0x36,0x0E,
0x80,0x18,0x17,0x3A,0x74,0x5C,0xA7,0xC2,0x8A,0x1C,0xE7,0xCD,0x82,0x1C,0xCD,0xEE,
0x1B,0xCD,0x99,0x1E,0xDD,0x71,0x0D,0xDD,0x70,0x0E,0xDD,0x36,0x00,0x00,0x2A,0x59,
0x5C,0xED,0x5B,0x53,0x5C,0x37,0xED,0x52,0xDD,0x75,0x0B,0xDD,0x74,0x0C,0x2A,0x4B,
0x5C,0xED,0x52,0xDD,0x75,0x0F,0xDD,0x74,0x10,0xEB,0x3A,0x74,0x5C,0xA7,0xCA,0x70,
0x09,0xE5,0x01,0x11,0x00,0xDD,0x09,0xDD,0xE5,0x11,0x11,0x00,0xAF,0x37,0xCD,0x56,
0x05,0xDD,0xE1,0x30,0xF2,0x3E,0xFE,0xCD,0x01,0x16,0xFD,0x36,0x52,0x03,0x0E,0x80,
0xDD,0x7E,0x00,0xDD,0xBE,0xEF,0x20,0x02,0x0E,0xF6,0xFE,0x04,0x30,0xD9,0x11,0xC0,
0x09,0xC5,0xCD,0x0A,0x0C,0xC1,0xDD,0xE5,0xD1,0x21,0xF0,0xFF,0x19,0x06,0x0A,0x7E,
0x3C,0x20,0x03,0x79,0x80,0x4F,0x13,0x1A,0xBE,0x23,0x20,0x01,0x0C,0xD7,0x10,0xF6,
0xCB,0x79,0x20,0xB3,0x3E,0x0D,0xD7,0xE1,0xDD,0x7E,0x00,0xFE,0x03,0x28,0x0C,0x3A,
0x74,0x5C,0x3D,0xCA,0x08,0x08,0xFE,0x02,0xCA,0xB6,0x08,0xE5,0xDD,0x6E,0xFA,0xDD,
0x66,0xFB,0xDD,0x5E,0x0B,0xDD,0x56,0x0C,0x7C,0xB5,0x28,0x0D,0xED,0x52,0x38,0x26,
0x28,0x07,0xDD,0x7E,0x00,0xFE,0x03,0x20,0x1D,0xE1,0x7C,0xB5,0x20,0x06,0xDD,0x6E,
0x0D,0xDD,0x66,0x0E,0xE5,0xDD,0xE1,0x3A,0x74,0x5C,0xFE,0x02,0x37,0x20,0x01,0xA7,
0x3E,0xFF,0xCD,0x56,0x05,0xD8,0xCF,0x1A,0xDD,0x5E,0x0B,0xDD,0x56,0x0C,0xE5,0x7C,
0xB5,0x20,0x06,0x13,0x13,0x13,0xEB,0x18,0x0C,0xDD,0x6E,0xFA,0xDD,0x66,0xFB,0xEB,
0x37,0xED,0x52,0x38,0x09,0x11,0x05,0x00,0x19,0x44,0x4D,0xCD,0x05,0x1F,0xE1,0xDD,
0x7E,0x00,0xA7,0x28,0x3E,0x7C,0xB5,0x28,0x13,0x2B,0x46,0x2B,0x4E,0x2B,0x03,0x03,
0x03,0xDD,0x22,0x5F,0x5C,0xCD,0xE8,0x19,0xDD,0x2A,0x5F,0x5C,0x2A,0x59,0x5C,0x2B,
0xDD,0x4E,0x0B,0xDD,0x46,0x0C,0xC5,0x03,0x03,0x03,0xDD,0x7E,0xFD,0xF5,0xCD,0x55,
0x16,0x23,0xF1,0x77,0xD1,0x23,0x73,0x23,0x72,0x23,0xE5,0xDD,0xE1,0x37,0x3E,0xFF,
0xC3,0x02,0x08,0xEB,0x2A,0x59,0x5C,0x2B,0xDD,0x22,0x5F,0x5C,0xDD,0x4E,0x0B,0xDD,
0x46,0x0C,0xC5,0xCD,0xE5,0x19,0xC1,0xE5,0xC5,0xCD,0x55,0x16,0xDD,0x2A,0x5F,0x5C,
0x23,0xDD,0x4E,0x0F,0xDD,0x46,0x10,0x09,0x22,0x4B,0x5C,0xDD,0x66,0x0E,0x7C,0xE6,
0xC0,0x20,0x0A,0xDD,0x6E,0x0D,0x22,0x42,0x5C,0xFD,0x36,0x0A,0x00,0xD1,0xDD,0xE1,
0x37,0x3E,0xFF,0xC3,0x02,0x08,0xDD,0x4E,0x0B,0xDD,0x46,0x0C,0xC5,0x03,0xF7,0x36,
0x80,0xEB,0xD1,0xE5,0xE5,0xDD,0xE1,0x37,0x3E,0xFF,0xCD,0x02,0x08,0xE1,0xED,0x5B,
0x53,0x5C,0x7E,0xE6,0xC0,0x20,0x19,0x1A,0x13,0xBE,0x23,0x20,0x02,0x1A,0xBE,0x1B,
0x2B,0x30,0x08,0xE5,0xEB,0xCD,0xB8,0x19,0xE1,0x18,0xEC,0xCD,0x2C,0x09,0x18,0xE2,
0x7E,0x4F,0xFE,0x80,0xC8,0xE5,0x2A,0x4B,0x5C,0x7E,0xFE,0x80,0x28,0x25,0xB9,0x28,
0x08,0xC5,0xCD,0xB8,0x19,0xC1,0xEB,0x18,0xF0,0xE6,0xE0,0xFE,0xA0,0x20,0x12,0xD1,
0xD5,0xE5,0x23,0x13,0x1A,0xBE,0x20,0x06,0x17,0x30,0xF7,0xE1,0x18,0x03,0xE1,0x18,
0xE0,0x3E,0xFF,0xD1,0xEB,0x3C,0x37,0xCD,0x2C,0x09,0x18,0xC4,0x20,0x10,0x08,0x22,
0x5F,0x5C,0xEB,0xCD,0xB8,0x19,0xCD,0xE8,0x19,0xEB,0x2A,0x5F,0x5C,0x08,0x08,0xD5,
0xCD,0xB8,0x19,0x22,0x5F,0x5C,0x2A,0x53,0x5C,0xE3,0xC5,0x08,0x38,0x07,0x2B,0xCD,
0x55,0x16,0x23,0x18,0x03,0xCD,0x55,0x16,0x23,0xC1,0xD1,0xED,0x53,0x53,0x5C,0xED,
0x5B,0x5F,0x5C,0xC5,0xD5,0xEB,0xED,0xB0,0xE1,0xC1,0xD5,0xCD,0xE8,0x19,0xD1,0xC9,
0xE5,0x3E,0xFD,0xCD,0x01,0x16,0xAF,0x11,0xA1,0x09,0xCD,0x0A,0x0C,0xFD,0xCB,0x02,
0xEE,0xCD,0xD4,0x15,0xDD,0xE5,0x11,0x11,0x00,0xAF,0xCD,0xC2,0x04,0xDD,0xE1,0x06,
0x32,0x76,0x10,0xFD,0xDD,0x5E,0x0B,0xDD,0x56,0x0C,0x3E,0xFF,0xDD,0xE1,0xC3,0xC2,
0x04,0x80,0x53,0x74,0x61,0x72,0x74,0x20,0x74,0x61,0x70,0x65,0x2C,0x20,0x74,0x68,
0x65,0x6E,0x20,0x70,0x72,0x65,0x73,0x73,0x20,0x61,0x6E,0x79,0x20,0x6B,0x65,0x79,
0xAE,0x0D,0x50,0x72,0x6F,0x67,0x72,0x61,0x6D,0x3A,0xA0,0x0D,0x4E,0x75,0x6D,0x62,
0x65,0x72,0x20,0x61,0x72,0x72,0x61,0x79,0x3A,0xA0,0x0D,0x43,0x68,0x61,0x72,0x61,
0x63,0x74,0x65,0x72,0x20,0x61,0x72,0x72,0x61,0x79,0x3A,0xA0,0x0D,0x42,0x79,0x74,
0x65,0x73,0x3A,0xA0,0xCD,0x03,0x0B,0xFE,0x20,0xD2,0xD9,0x0A,0xFE,0x06,0x38,0x69,
0xFE,0x18,0x30,0x65,0x21,0x0B,0x0A,0x5F,0x16,0x00,0x19,0x5E,0x19,0xE5,0xC3,0x03,
0x0B,0x4E,0x57,0x10,0x29,0x54,0x53,0x52,0x37,0x50,0x4F,0x5F,0x5E,0x5D,0x5C,0x5B,
0x5A,0x54,0x53,0x0C,0x3E,0x22,0xB9,0x20,0x11,0xFD,0xCB,0x01,0x4E,0x20,0x09,0x04,
0x0E,0x02,0x3E,0x18,0xB8,0x20,0x03,0x05,0x0E,0x21,0xC3,0xD9,0x0D,0x3A,0x91,0x5C,
0xF5,0xFD,0x36,0x57,0x01,0x3E,0x20,0xCD,0x65,0x0B,0xF1,0x32,0x91,0x5C,0xC9,0xFD,
0xCB,0x01,0x4E,0xC2,0xCD,0x0E,0x0E,0x21,0xCD,0x55,0x0C,0x05,0xC3,0xD9,0x0D,0xCD,
0x03,0x0B,0x79,0x3D,0x3D,0xE6,0x10,0x18,0x5A,0x3E,0x3F,0x18,0x6C,0x11,0x87,0x0A,
0x32,0x0F,0x5C,0x18,0x0B,0x11,0x6D,0x0A,0x18,0x03,0x11,0x87,0x0A,0x32,0x0E,0x5C,
0x2A,0x51,0x5C,0x73,0x23,0x72,0xC9,0x11,0xF4,0x09,0xCD,0x80,0x0A,0x2A,0x0E,0x5C,
0x57,0x7D,0xFE,0x16,0xDA,0x11,0x22,0x20,0x29,0x44,0x4A,0x3E,0x1F,0x91,0x38,0x0C,
0xC6,0x02,0x4F,0xFD,0xCB,0x01,0x4E,0x20,0x16,0x3E,0x16,0x90,0xDA,0x9F,0x1E,0x3C,
0x47,0x04,0xFD,0xCB,0x02,0x46,0xC2,0x55,0x0C,0xFD,0xBE,0x31,0xDA,0x86,0x0C,0xC3,
0xD9,0x0D,0x7C,0xCD,0x03,0x0B,0x81,0x3D,0xE6,0x1F,0xC8,0x57,0xFD,0xCB,0x01,0xC6,
0x3E,0x20,0xCD,0x3B,0x0C,0x15,0x20,0xF8,0xC9,0xCD,0x24,0x0B,0xFD,0xCB,0x01,0x4E,
0x20,0x1A,0xFD,0xCB,0x02,0x46,0x20,0x08,0xED,0x43,0x88,0x5C,0x22,0x84,0x5C,0xC9,
0xED,0x43,0x8A,0x5C,0xED,0x43,0x82,0x5C,0x22,0x86,0x5C,0xC9,0xFD,0x71,0x45,0x22,
0x80,0x5C,0xC9,0xFD,0xCB,0x01,0x4E,0x20,0x14,0xED,0x4B,0x88,0x5C,0x2A,0x84,0x5C,
0xFD,0xCB,0x02,0x46,0xC8,0xED,0x4B,0x8A,0x5C,0x2A,0x86,0x5C,0xC9,0xFD,0x4E,0x45,
0x2A,0x80,0x5C,0xC9,0xFE,0x80,0x38,0x3D,0xFE,0x90,0x30,0x26,0x47,0xCD,0x38,0x0B,
0xCD,0x03,0x0B,0x11,0x92,0x5C,0x18,0x47,0x21,0x92,0x5C,0xCD,0x3E,0x0B,0xCB,0x18,
0x9F,0xE6,0x0F,0x4F,0xCB,0x18,0x9F,0xE6,0xF0,0xB1,0x0E,0x04,0x77,0x23,0x0D,0x20,
0xFB,0xC9,0xD6,0xA5,0x30,0x09,0xC6,0x15,0xC5,0xED,0x4B,0x7B,0x5C,0x18,0x0B,0xCD,
0x10,0x0C,0xC3,0x03,0x0B,0xC5,0xED,0x4B,0x36,0x5C,0xEB,0x21,0x3B,0x5C,0xCB,0x86,
0xFE,0x20,0x20,0x02,0xCB,0xC6,0x26,0x00,0x6F,0x29,0x29,0x29,0x09,0xC1,0xEB,0x79,
0x3D,0x3E,0x21,0x20,0x0E,0x05,0x4F,0xFD,0xCB,0x01,0x4E,0x28,0x06,0xD5,0xCD,0xCD,
0x0E,0xD1,0x79,0xB9,0xD5,0xCC,0x55,0x0C,0xD1,0xC5,0xE5,0x3A,0x91,0x5C,0x06,0xFF,
0x1F,0x38,0x01,0x04,0x1F,0x1F,0x9F,0x4F,0x3E,0x08,0xA7,0xFD,0xCB,0x01,0x4E,0x28,
0x05,0xFD,0xCB,0x30,0xCE,0x37,0xEB,0x08,0x1A,0xA0,0xAE,0xA9,0x12,0x08,0x38,0x13,
0x14,0x23,0x3D,0x20,0xF2,0xEB,0x25,0xFD,0xCB,0x01,0x4E,0xCC,0xDB,0x0B,0xE1,0xC1,
0x0D,0x23,0xC9,0x08,0x3E,0x20,0x83,0x5F,0x08,0x18,0xE6,0x7C,0x0F,0x0F,0x0F,0xE6,
0x03,0xF6,0x58,0x67,0xED,0x5B,0x8F,0x5C,0x7E,0xAB,0xA2,0xAB,0xFD,0xCB,0x57,0x76,
0x28,0x08,0xE6,0xC7,0xCB,0x57,0x20,0x02,0xEE,0x38,0xFD,0xCB,0x57,0x66,0x28,0x08,
0xE6,0xF8,0xCB,0x6F,0x20,0x02,0xEE,0x07,0x77,0xC9,0xE5,0x26,0x00,0xE3,0x18,0x04,
0x11,0x95,0x00,0xF5,0xCD,0x41,0x0C,0x38,0x09,0x3E,0x20,0xFD,0xCB,0x01,0x46,0xCC,
0x3B,0x0C,0x1A,0xE6,0x7F,0xCD,0x3B,0x0C,0x1A,0x13,0x87,0x30,0xF5,0xD1,0xFE,0x48,
0x28,0x03,0xFE,0x82,0xD8,0x7A,0xFE,0x03,0xD8,0x3E,0x20,0xD5,0xD9,0xD7,0xD9,0xD1,
0xC9,0xF5,0xEB,0x3C,0xCB,0x7E,0x23,0x28,0xFB,0x3D,0x20,0xF8,0xEB,0xF1,0xFE,0x20,
0xD8,0x1A,0xD6,0x41,0xC9,0xFD,0xCB,0x01,0x4E,0xC0,0x11,0xD9,0x0D,0xD5,0x78,0xFD,
0xCB,0x02,0x46,0xC2,0x02,0x0D,0xFD,0xBE,0x31,0x38,0x1B,0xC0,0xFD,0xCB,0x02,0x66,
0x28,0x16,0xFD,0x5E,0x2D,0x1D,0x28,0x5A,0x3E,0x00,0xCD,0x01,0x16,0xED,0x7B,0x3F,
0x5C,0xFD,0xCB,0x02,0xA6,0xC9,0xCF,0x04,0xFD,0x35,0x52,0x20,0x45,0x3E,0x18,0x90,
0x32,0x8C,0x5C,0x2A,0x8F,0x5C,0xE5,0x3A,0x91,0x5C,0xF5,0x3E,0xFD,0xCD,0x01,0x16,
0xAF,0x11,0xF8,0x0C,0xCD,0x0A,0x0C,0xFD,0xCB,0x02,0xEE,0x21,0x3B,0x5C,0xCB,0xDE,
0xCB,0xAE,0xD9,0xCD,0xD4,0x15,0xD9,0xFE,0x20,0x28,0x45,0xFE,0xE2,0x28,0x41,0xF6,
0x20,0xFE,0x6E,0x28,0x3B,0x3E,0xFE,0xCD,0x01,0x16,0xF1,0x32,0x91,0x5C,0xE1,0x22,
0x8F,0x5C,0xCD,0xFE,0x0D,0xFD,0x46,0x31,0x04,0x0E,0x21,0xC5,0xCD,0x9B,0x0E,0x7C,
0x0F,0x0F,0x0F,0xE6,0x03,0xF6,0x58,0x67,0x11,0xE0,0x5A,0x1A,0x4E,0x06,0x20,0xEB,
0x12,0x71,0x13,0x23,0x10,0xFA,0xC1,0xC9,0x80,0x73,0x63,0x72,0x6F,0x6C,0x6C,0xBF,
0xCF,0x0C,0xFE,0x02,0x38,0x80,0xFD,0x86,0x31,0xD6,0x19,0xD0,0xED,0x44,0xC5,0x47,
0x2A,0x8F,0x5C,0xE5,0x2A,0x91,0x5C,0xE5,0xCD,0x4D,0x0D,0x78,0xF5,0x21,0x6B,0x5C,
0x46,0x78,0x3C,0x77,0x21,0x89,0x5C,0xBE,0x38,0x03,0x34,0x06,0x18,0xCD,0x00,0x0E,
0xF1,0x3D,0x20,0xE8,0xE1,0xFD,0x75,0x57,0xE1,0x22,0x8F,0x5C,0xED,0x4B,0x88,0x5C,
0xFD,0xCB,0x02,0x86,0xCD,0xD9,0x0D,0xFD,0xCB,0x02,0xC6,0xC1,0xC9,0xAF,0x2A,0x8D,
0x5C,0xFD,0xCB,0x02,0x46,0x28,0x04,0x67,0xFD,0x6E,0x0E,0x22,0x8F,0x5C,0x21,0x91,
0x5C,0x20,0x02,0x7E,0x0F,0xAE,0xE6,0x55,0xAE,0x77,0xC9,0xCD,0xAF,0x0D,0x21,0x3C,
0x5C,0xCB,0xAE,0xCB,0xC6,0xCD,0x4D,0x0D,0xFD,0x46,0x31,0xCD,0x44,0x0E,0x21,0xC0,
0x5A,0x3A,0x8D,0x5C,0x05,0x18,0x07,0x0E,0x20,0x2B,0x77,0x0D,0x20,0xFB,0x10,0xF7,
0xFD,0x36,0x31,0x02,0x3E,0xFD,0xCD,0x01,0x16,0x2A,0x51,0x5C,0x11,0xF4,0x09,0xA7,
0x73,0x23,0x72,0x23,0x11,0xA8,0x10,0x3F,0x38,0xF6,0x01,0x21,0x17,0x18,0x2A,0x21,
0x00,0x00,0x22,0x7D,0x5C,0xFD,0xCB,0x30,0x86,0xCD,0x94,0x0D,0x3E,0xFE,0xCD,0x01,
0x16,0xCD,0x4D,0x0D,0x06,0x18,0xCD,0x44,0x0E,0x2A,0x51,0x5C,0x11,0xF4,0x09,0x73,
0x23,0x72,0xFD,0x36,0x52,0x01,0x01,0x21,0x18,0x21,0x00,0x5B,0xFD,0xCB,0x01,0x4E,
0x20,0x12,0x78,0xFD,0xCB,0x02,0x46,0x28,0x05,0xFD,0x86,0x31,0xD6,0x18,0xC5,0x47,
0xCD,0x9B,0x0E,0xC1,0x3E,0x21,0x91,0x5F,0x16,0x00,0x19,0xC3,0xDC,0x0A,0x06,0x17,
0xCD,0x9B,0x0E,0x0E,0x08,0xC5,0xE5,0x78,0xE6,0x07,0x78,0x20,0x0C,0xEB,0x21,0xE0,
0xF8,0x19,0xEB,0x01,0x20,0x00,0x3D,0xED,0xB0,0xEB,0x21,0xE0,0xFF,0x19,0xEB,0x47,
0xE6,0x07,0x0F,0x0F,0x0F,0x4F,0x78,0x06,0x00,0xED,0xB0,0x06,0x07,0x09,0xE6,0xF8,
0x20,0xDB,0xE1,0x24,0xC1,0x0D,0x20,0xCD,0xCD,0x88,0x0E,0x21,0xE0,0xFF,0x19,0xEB,
0xED,0xB0,0x06,0x01,0xC5,0xCD,0x9B,0x0E,0x0E,0x08,0xC5,0xE5,0x78,0xE6,0x07,0x0F,
0x0F,0x0F,0x4F,0x78,0x06,0x00,0x0D,0x54,0x5D,0x36,0x00,0x13,0xED,0xB0,0x11,0x01,
0x07,0x19,0x3D,0xE6,0xF8,0x47,0x20,0xE5,0xE1,0x24,0xC1,0x0D,0x20,0xDC,0xCD,0x88,
0x0E,0x62,0x6B,0x13,0x3A,0x8D,0x5C,0xFD,0xCB,0x02,0x46,0x28,0x03,0x3A,0x48,0x5C,
0x77,0x0B,0xED,0xB0,0xC1,0x0E,0x21,0xC9,0x7C,0x0F,0x0F,0x0F,0x3D,0xF6,0x50,0x67,
0xEB,0x61,0x68,0x29,0x29,0x29,0x29,0x29,0x44,0x4D,0xC9,0x3E,0x18,0x90,0x57,0x0F,
0x0F,0x0F,0xE6,0xE0,0x6F,0x7A,0xE6,0x18,0xF6,0x40,0x67,0xC9,0xF3,0x06,0xB0,0x21,
0x00,0x40,0xE5,0xC5,0xCD,0xF4,0x0E,0xC1,0xE1,0x24,0x7C,0xE6,0x07,0x20,0x0A,0x7D,
0xC6,0x20,0x6F,0x3F,0x9F,0xE6,0xF8,0x84,0x67,0x10,0xE7,0x18,0x0D,0xF3,0x21,0x00,
0x5B,0x06,0x08,0xC5,0xCD,0xF4,0x0E,0xC1,0x10,0xF9,0x3E,0x04,0xD3,0xFB,0xFB,0x21,
0x00,0x5B,0xFD,0x75,0x46,0xAF,0x47,0x77,0x23,0x10,0xFC,0xFD,0xCB,0x30,0x8E,0x0E,
0x21,0xC3,0xD9,0x0D,0x78,0xFE,0x03,0x9F,0xE6,0x02,0xD3,0xFB,0x57,0xCD,0x54,0x1F,
0x38,0x0A,0x3E,0x04,0xD3,0xFB,0xFB,0xCD,0xDF,0x0E,0xCF,0x0C,0xDB,0xFB,0x87,0xF8,
0x30,0xEB,0x0E,0x20,0x5E,0x23,0x06,0x08,0xCB,0x12,0xCB,0x13,0xCB,0x1A,0xDB,0xFB,
0x1F,0x30,0xFB,0x7A,0xD3,0xFB,0x10,0xF0,0x0D,0x20,0xE9,0xC9,0x2A,0x3D,0x5C,0xE5,
0x21,0x7F,0x10,0xE5,0xED,0x73,0x3D,0x5C,0xCD,0xD4,0x15,0xF5,0x16,0x00,0xFD,0x5E,
0xFF,0x21,0xC8,0x00,0xCD,0xB5,0x03,0xF1,0x21,0x38,0x0F,0xE5,0xFE,0x18,0x30,0x31,
0xFE,0x07,0x38,0x2D,0xFE,0x10,0x38,0x3A,0x01,0x02,0x00,0x57,0xFE,0x16,0x38,0x0C,
0x03,0xFD,0xCB,0x37,0x7E,0xCA,0x1E,0x10,0xCD,0xD4,0x15,0x5F,0xCD,0xD4,0x15,0xD5,
0x2A,0x5B,0x5C,0xFD,0xCB,0x07,0x86,0xCD,0x55,0x16,0xC1,0x23,0x70,0x23,0x71,0x18,
0x0A,0xFD,0xCB,0x07,0x86,0x2A,0x5B,0x5C,0xCD,0x52,0x16,0x12,0x13,0xED,0x53,0x5B,
0x5C,0xC9,0x5F,0x16,0x00,0x21,0x99,0x0F,0x19,0x5E,0x19,0xE5,0x2A,0x5B,0x5C,0xC9,
0x09,0x66,0x6A,0x50,0xB5,0x70,0x7E,0xCF,0xD4,0x2A,0x49,0x5C,0xFD,0xCB,0x37,0x6E,
0xC2,0x97,0x10,0xCD,0x6E,0x19,0xCD,0x95,0x16,0x7A,0xB3,0xCA,0x97,0x10,0xE5,0x23,
0x4E,0x23,0x46,0x21,0x0A,0x00,0x09,0x44,0x4D,0xCD,0x05,0x1F,0xCD,0x97,0x10,0x2A,
0x51,0x5C,0xE3,0xE5,0x3E,0xFF,0xCD,0x01,0x16,0xE1,0x2B,0xFD,0x35,0x0F,0xCD,0x55,
0x18,0xFD,0x34,0x0F,0x2A,0x59,0x5C,0x23,0x23,0x23,0x23,0x22,0x5B,0x5C,0xE1,0xCD,
0x15,0x16,0xC9,0xFD,0xCB,0x37,0x6E,0x20,0x08,0x21,0x49,0x5C,0xCD,0x0F,0x19,0x18,
0x6D,0xFD,0x36,0x00,0x10,0x18,0x1D,0xCD,0x31,0x10,0x18,0x05,0x7E,0xFE,0x0D,0xC8,
0x23,0x22,0x5B,0x5C,0xC9,0xCD,0x31,0x10,0x01,0x01,0x00,0xC3,0xE8,0x19,0xCD,0xD4,
0x15,0xCD,0xD4,0x15,0xE1,0xE1,0xE1,0x22,0x3D,0x5C,0xFD,0xCB,0x00,0x7E,0xC0,0xF9,
0xC9,0x37,0xCD,0x95,0x11,0xED,0x52,0x19,0x23,0xC1,0xD8,0xC5,0x44,0x4D,0x62,0x6B,
0x23,0x1A,0xE6,0xF0,0xFE,0x10,0x20,0x09,0x23,0x1A,0xD6,0x17,0xCE,0x00,0x20,0x01,
0x23,0xA7,0xED,0x42,0x09,0xEB,0x38,0xE6,0xC9,0xFD,0xCB,0x37,0x6E,0xC0,0x2A,0x49,
0x5C,0xCD,0x6E,0x19,0xEB,0xCD,0x95,0x16,0x21,0x4A,0x5C,0xCD,0x1C,0x19,0xCD,0x95,
0x17,0x3E,0x00,0xC3,0x01,0x16,0xFD,0xCB,0x37,0x7E,0x28,0xA8,0xC3,0x81,0x0F,0xFD,
0xCB,0x30,0x66,0x28,0xA1,0xFD,0x36,0x00,0xFF,0x16,0x00,0xFD,0x5E,0xFE,0x21,0x90,
0x1A,0xCD,0xB5,0x03,0xC3,0x30,0x0F,0xE5,0xCD,0x90,0x11,0x2B,0xCD,0xE5,0x19,0x22,
0x5B,0x5C,0xFD,0x36,0x07,0x00,0xE1,0xC9,0xFD,0xCB,0x02,0x5E,0xC4,0x1D,0x11,0xA7,
0xFD,0xCB,0x01,0x6E,0xC8,0x3A,0x08,0x5C,0xFD,0xCB,0x01,0xAE,0xF5,0xFD,0xCB,0x02,
0x6E,0xC4,0x6E,0x0D,0xF1,0xFE,0x20,0x30,0x52,0xFE,0x10,0x30,0x2D,0xFE,0x06,0x30,
0x0A,0x47,0xE6,0x01,0x4F,0x78,0x1F,0xC6,0x12,0x18,0x2A,0x20,0x09,0x21,0x6A,0x5C,
0x3E,0x08,0xAE,0x77,0x18,0x0E,0xFE,0x0E,0xD8,0xD6,0x0D,0x21,0x41,0x5C,0xBE,0x77,
0x20,0x02,0x36,0x00,0xFD,0xCB,0x02,0xDE,0xBF,0xC9,0x47,0xE6,0x07,0x4F,0x3E,0x10,
0xCB,0x58,0x20,0x01,0x3C,0xFD,0x71,0xD3,0x11,0x0D,0x11,0x18,0x06,0x3A,0x0D,0x5C,
0x11,0xA8,0x10,0x2A,0x4F,0x5C,0x23,0x23,0x73,0x23,0x72,0x37,0xC9,0xCD,0x4D,0x0D,
0xFD,0xCB,0x02,0x9E,0xFD,0xCB,0x02,0xAE,0x2A,0x8A,0x5C,0xE5,0x2A,0x3D,0x5C,0xE5,
0x21,0x67,0x11,0xE5,0xED,0x73,0x3D,0x5C,0x2A,0x82,0x5C,0xE5,0x37,0xCD,0x95,0x11,
0xEB,0xCD,0x7D,0x18,0xEB,0xCD,0xE1,0x18,0x2A,0x8A,0x5C,0xE3,0xEB,0xCD,0x4D,0x0D,
0x3A,0x8B,0x5C,0x92,0x38,0x26,0x20,0x06,0x7B,0xFD,0x96,0x50,0x30,0x1E,0x3E,0x20,
0xD5,0xCD,0xF4,0x09,0xD1,0x18,0xE9,0x16,0x00,0xFD,0x5E,0xFE,0x21,0x90,0x1A,0xCD,
0xB5,0x03,0xFD,0x36,0x00,0xFF,0xED,0x5B,0x8A,0x5C,0x18,0x02,0xD1,0xE1,0xE1,0x22,
0x3D,0x5C,0xC1,0xD5,0xCD,0xD9,0x0D,0xE1,0x22,0x82,0x5C,0xFD,0x36,0x26,0x00,0xC9,
0x2A,0x61,0x5C,0x2B,0xA7,0xED,0x5B,0x59,0x5C,0xFD,0xCB,0x37,0x6E,0xC8,0xED,0x5B,
0x61,0x5C,0xD8,0x2A,0x63,0x5C,0xC9,0x7E,0xFE,0x0E,0x01,0x06,0x00,0xCC,0xE8,0x19,
0x7E,0x23,0xFE,0x0D,0x20,0xF1,0xC9,0xF3,0x3E,0xFF,0xED,0x5B,0xB2,0x5C,0xD9,0xED,
0x4B,0xB4,0x5C,0xED,0x5B,0x38,0x5C,0x2A,0x7B,0x5C,0xD9,0x47,0x3E,0x07,0xD3,0xFE,
0x3E,0x3F,0xED,0x47,0x00,0x00,0x00,0x00,0x00,0x00,0x62,0x6B,0x36,0x02,0x2B,0xBC,
0x20,0xFA,0xA7,0xED,0x52,0x19,0x23,0x30,0x06,0x35,0x28,0x03,0x35,0x28,0xF3,0x2B,
0xD9,0xED,0x43,0xB4,0x5C,0xED,0x53,0x38,0x5C,0x22,0x7B,0x5C,0xD9,0x04,0x28,0x19,
0x22,0xB4,0x5C,0x11,0xAF,0x3E,0x01,0xA8,0x00,0xEB,0xED,0xB8,0xEB,0x23,0x22,0x7B,
0x5C,0x2B,0x01,0x40,0x00,0xED,0x43,0x38,0x5C,0x22,0xB2,0x5C,0x21,0x00,0x3C,0x22,
0x36,0x5C,0x2A,0xB2,0x5C,0x36,0x3E,0x2B,0xF9,0x2B,0x2B,0x22,0x3D,0x5C,0xED,0x56,
0xFD,0x21,0x3A,0x5C,0xFB,0x21,0xB6,0x5C,0x22,0x4F,0x5C,0x11,0xAF,0x15,0x01,0x15,
0x00,0xEB,0xED,0xB0,0xEB,0x2B,0x22,0x57,0x5C,0x23,0x22,0x53,0x5C,0x22,0x4B,0x5C,
0x36,0x80,0x23,0x22,0x59,0x5C,0x36,0x0D,0x23,0x36,0x80,0x23,0x22,0x61,0x5C,0x22,
0x63,0x5C,0x22,0x65,0x5C,0x3E,0x38,0x32,0x8D,0x5C,0x32,0x8F,0x5C,0x32,0x48,0x5C,
0x21,0x23,0x05,0x22,0x09,0x5C,0xFD,0x35,0xC6,0xFD,0x35,0xCA,0x21,0xC6,0x15,0x11,
0x10,0x5C,0x01,0x0E,0x00,0xED,0xB0,0xFD,0xCB,0x01,0xCE,0xCD,0xDF,0x0E,0xFD,0x36,
0x31,0x02,0xCD,0x6B,0x0D,0xAF,0x11,0x38,0x15,0xCD,0x0A,0x0C,0xFD,0xCB,0x02,0xEE,
0x18,0x07,0xFD,0x36,0x31,0x02,0xCD,0x95,0x17,0xCD,0xB0,0x16,0x3E,0x00,0xCD,0x01,
0x16,0xCD,0x2C,0x0F,0xCD,0x17,0x1B,0xFD,0xCB,0x00,0x7E,0x20,0x12,0xFD,0xCB,0x30,
0x66,0x28,0x40,0x2A,0x59,0x5C,0xCD,0xA7,0x11,0xFD,0x36,0x00,0xFF,0x18,0xDD,0x2A,
0x59,0x5C,0x22,0x5D,0x5C,0xCD,0xFB,0x19,0x78,0xB1,0xC2,0x5D,0x15,0xDF,0xFE,0x0D,
0x28,0xC0,0xFD,0xCB,0x30,0x46,0xC4,0xAF,0x0D,0xCD,0x6E,0x0D,0x3E,0x19,0xFD,0x96,
0x4F,0x32,0x8C,0x5C,0xFD,0xCB,0x01,0xFE,0xFD,0x36,0x00,0xFF,0xFD,0x36,0x0A,0x01,
0xCD,0x8A,0x1B,0x76,0xFD,0xCB,0x01,0xAE,0xFD,0xCB,0x30,0x4E,0xC4,0xCD,0x0E,0x3A,
0x3A,0x5C,0x3C,0xF5,0x21,0x00,0x00,0xFD,0x74,0x37,0xFD,0x74,0x26,0x22,0x0B,0x5C,
0x21,0x01,0x00,0x22,0x16,0x5C,0xCD,0xB0,0x16,0xFD,0xCB,0x37,0xAE,0xCD,0x6E,0x0D,
0xFD,0xCB,0x02,0xEE,0xF1,0x47,0xFE,0x0A,0x38,0x02,0xC6,0x07,0xCD,0xEF,0x15,0x3E,
0x20,0xD7,0x78,0x11,0x91,0x13,0xCD,0x0A,0x0C,0xAF,0x11,0x36,0x15,0xCD,0x0A,0x0C,
0xED,0x4B,0x45,0x5C,0xCD,0x1B,0x1A,0x3E,0x3A,0xD7,0xFD,0x4E,0x0D,0x06,0x00,0xCD,
0x1B,0x1A,0xCD,0x97,0x10,0x3A,0x3A,0x5C,0x3C,0x28,0x1B,0xFE,0x09,0x28,0x04,0xFE,
0x15,0x20,0x03,0xFD,0x34,0x0D,0x01,0x03,0x00,0x11,0x70,0x5C,0x21,0x44,0x5C,0xCB,
0x7E,0x28,0x01,0x09,0xED,0xB8,0xFD,0x36,0x0A,0xFF,0xFD,0xCB,0x01,0x9E,0xC3,0xAC,
0x12,0x80,0x4F,0xCB,0x4E,0x45,0x58,0x54,0x20,0x77,0x69,0x74,0x68,0x6F,0x75,0x74,
0x20,0x46,0x4F,0xD2,0x56,0x61,0x72,0x69,0x61,0x62,0x6C,0x65,0x20,0x6E,0x6F,0x74,
0x20,0x66,0x6F,0x75,0x6E,0xE4,0x53,0x75,0x62,0x73,0x63,0x72,0x69,0x70,0x74,0x20,
0x77,0x72,0x6F,0x6E,0xE7,0x4F,0x75,0x74,0x20,0x6F,0x66,0x20,0x6D,0x65,0x6D,0x6F,
0x72,0xF9,0x4F,0x75,0x74,0x20,0x6F,0x66,0x20,0x73,0x63,0x72,0x65,0x65,0xEE,0x4E,
0x75,0x6D,0x62,0x65,0x72,0x20,0x74,0x6F,0x6F,0x20,0x62,0x69,0xE7,0x52,0x45,0x54,
0x55,0x52,0x4E,0x20,0x77,0x69,0x74,0x68,0x6F,0x75,0x74,0x20,0x47,0x4F,0x53,0x55,
0xC2,0x45,0x6E,0x64,0x20,0x6F,0x66,0x20,0x66,0x69,0x6C,0xE5,0x53,0x54,0x4F,0x50,
0x20,0x73,0x74,0x61,0x74,0x65,0x6D,0x65,0x6E,0xF4,0x49,0x6E,0x76,0x61,0x6C,0x69,
0x64,0x20,0x61,0x72,0x67,0x75,0x6D,0x65,0x6E,0xF4,0x49,0x6E,0x74,0x65,0x67,0x65,
0x72,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61,0x6E,0x67,0xE5,0x4E,0x6F,
0x6E,0x73,0x65,0x6E,0x73,0x65,0x20,0x69,0x6E,0x20,0x42,0x41,0x53,0x49,0xC3,0x42,
0x52,0x45,0x41,0x4B,0x20,0x2D,0x20,0x43,0x4F,0x4E,0x54,0x20,0x72,0x65,0x70,0x65,
0x61,0x74,0xF3,0x4F,0x75,0x74,0x20,0x6F,0x66,0x20,0x44,0x41,0x54,0xC1,0x49,0x6E,
0x76,0x61,0x6C,0x69,0x64,0x20,0x66,0x69,0x6C,0x65,0x20,0x6E,0x61,0x6D,0xE5,0x4E,
0x6F,0x20,0x72,0x6F,0x6F,0x6D,0x20,0x66,0x6F,0x72,0x20,0x6C,0x69,0x6E,0xE5,0x53,
0x54,0x4F,0x50,0x20,0x69,0x6E,0x20,0x49,0x4E,0x50,0x55,0xD4,0x46,0x4F,0x52,0x20,
0x77,0x69,0x74,0x68,0x6F,0x75,0x74,0x20,0x4E,0x45,0x58,0xD4,0x49,0x6E,0x76,0x61,
0x6C,0x69,0x64,0x20,0x49,0x2F,0x4F,0x20,0x64,0x65,0x76,0x69,0x63,0xE5,0x49,0x6E,
0x76,0x61,0x6C,0x69,0x64,0x20,0x63,0x6F,0x6C,0x6F,0x75,0xF2,0x42,0x52,0x45,0x41,
0x4B,0x20,0x69,0x6E,0x74,0x6F,0x20,0x70,0x72,0x6F,0x67,0x72,0x61,0xED,0x52,0x41,
0x4D,0x54,0x4F,0x50,0x20,0x6E,0x6F,0x20,0x67,0x6F,0x6F,0xE4,0x53,0x74,0x61,0x74,
0x65,0x6D,0x65,0x6E,0x74,0x20,0x6C,0x6F,0x73,0xF4,0x49,0x6E,0x76,0x61,0x6C,0x69,
0x64,0x20,0x73,0x74,0x72,0x65,0x61,0xED,0x46,0x4E,0x20,0x77,0x69,0x74,0x68,0x6F,
0x75,0x74,0x20,0x44,0x45,0xC6,0x50,0x61,0x72,0x61,0x6D,0x65,0x74,0x65,0x72,0x20,
0x65,0x72,0x72,0x6F,0xF2,0x54,0x61,0x70,0x65,0x20,0x6C,0x6F,0x61,0x64,0x69,0x6E,
0x67,0x20,0x65,0x72,0x72,0x6F,0xF2,0x2C,0xA0,0x7F,0x20,0x31,0x39,0x38,0x32,0x20,
0x53,0x69,0x6E,0x63,0x6C,0x61,0x69,0x72,0x20,0x52,0x65,0x73,0x65,0x61,0x72,0x63,
0x68,0x20,0x4C,0x74,0xE4,0x3E,0x10,0x01,0x00,0x00,0xC3,0x13,0x13,0xED,0x43,0x49,
0x5C,0x2A,0x5D,0x5C,0xEB,0x21,0x55,0x15,0xE5,0x2A,0x61,0x5C,0x37,0xED,0x52,0xE5,
0x60,0x69,0xCD,0x6E,0x19,0x20,0x06,0xCD,0xB8,0x19,0xCD,0xE8,0x19,0xC1,0x79,0x3D,
0xB0,0x28,0x28,0xC5,0x03,0x03,0x03,0x03,0x2B,0xED,0x5B,0x53,0x5C,0xD5,0xCD,0x55,
0x16,0xE1,0x22,0x53,0x5C,0xC1,0xC5,0x13,0x2A,0x61,0x5C,0x2B,0x2B,0xED,0xB8,0x2A,
0x49,0x5C,0xEB,0xC1,0x70,0x2B,0x71,0x2B,0x73,0x2B,0x72,0xF1,0xC3,0xA2,0x12,0xF4,
0x09,0xA8,0x10,0x4B,0xF4,0x09,0xC4,0x15,0x53,0x81,0x0F,0xC4,0x15,0x52,0xF4,0x09,
0xC4,0x15,0x50,0x80,0xCF,0x12,0x01,0x00,0x06,0x00,0x0B,0x00,0x01,0x00,0x01,0x00,
0x06,0x00,0x10,0x00,0xFD,0xCB,0x02,0x6E,0x20,0x04,0xFD,0xCB,0x02,0xDE,0xCD,0xE6,
0x15,0xD8,0x28,0xFA,0xCF,0x07,0xD9,0xE5,0x2A,0x51,0x5C,0x23,0x23,0x18,0x08,0x1E,
0x30,0x83,0xD9,0xE5,0x2A,0x51,0x5C,0x5E,0x23,0x56,0xEB,0xCD,0x2C,0x16,0xE1,0xD9,
0xC9,0x87,0xC6,0x16,0x6F,0x26,0x5C,0x5E,0x23,0x56,0x7A,0xB3,0x20,0x02,0xCF,0x17,
0x1B,0x2A,0x4F,0x5C,0x19,0x22,0x51,0x5C,0xFD,0xCB,0x30,0xA6,0x23,0x23,0x23,0x23,
0x4E,0x21,0x2D,0x16,0xCD,0xDC,0x16,0xD0,0x16,0x00,0x5E,0x19,0xE9,0x4B,0x06,0x53,
0x12,0x50,0x1B,0x00,0xFD,0xCB,0x02,0xC6,0xFD,0xCB,0x01,0xAE,0xFD,0xCB,0x30,0xE6,
0x18,0x04,0xFD,0xCB,0x02,0x86,0xFD,0xCB,0x01,0x8E,0xC3,0x4D,0x0D,0xFD,0xCB,0x01,
0xCE,0xC9,0x01,0x01,0x00,0xE5,0xCD,0x05,0x1F,0xE1,0xCD,0x64,0x16,0x2A,0x65,0x5C,
0xEB,0xED,0xB8,0xC9,0xF5,0xE5,0x21,0x4B,0x5C,0x3E,0x0E,0x5E,0x23,0x56,0xE3,0xA7,
0xED,0x52,0x19,0xE3,0x30,0x09,0xD5,0xEB,0x09,0xEB,0x72,0x2B,0x73,0x23,0xD1,0x23,
0x3D,0x20,0xE8,0xEB,0xD1,0xF1,0xA7,0xED,0x52,0x44,0x4D,0x03,0x19,0xEB,0xC9,0x00,
0x00,0xEB,0x11,0x8F,0x16,0x7E,0xE6,0xC0,0x20,0xF7,0x56,0x23,0x5E,0xC9,0x2A,0x63,
0x5C,0x2B,0xCD,0x55,0x16,0x23,0x23,0xC1,0xED,0x43,0x61,0x5C,0xC1,0xEB,0x23,0xC9,
0x2A,0x59,0x5C,0x36,0x0D,0x22,0x5B,0x5C,0x23,0x36,0x80,0x23,0x22,0x61,0x5C,0x2A,
0x61,0x5C,0x22,0x63,0x5C,0x2A,0x63,0x5C,0x22,0x65,0x5C,0xE5,0x21,0x92,0x5C,0x22,
0x68,0x5C,0xE1,0xC9,0xED,0x5B,0x59,0x5C,0xC3,0xE5,0x19,0x23,0x7E,0xA7,0xC8,0xB9,
0x23,0x20,0xF8,0x37,0xC9,0xCD,0x1E,0x17,0xCD,0x01,0x17,0x01,0x00,0x00,0x11,0xE2,
0xA3,0xEB,0x19,0x38,0x07,0x01,0xD4,0x15,0x09,0x4E,0x23,0x46,0xEB,0x71,0x23,0x70,
0xC9,0xE5,0x2A,0x4F,0x5C,0x09,0x23,0x23,0x23,0x4E,0xEB,0x21,0x16,0x17,0xCD,0xDC,
0x16,0x4E,0x06,0x00,0x09,0xE9,0x4B,0x05,0x53,0x03,0x50,0x01,0xE1,0xC9,0xCD,0x94,
0x1E,0xFE,0x10,0x38,0x02,0xCF,0x17,0xC6,0x03,0x07,0x21,0x10,0x5C,0x4F,0x06,0x00,
0x09,0x4E,0x23,0x46,0x2B,0xC9,0xEF,0x01,0x38,0xCD,0x1E,0x17,0x78,0xB1,0x28,0x16,
0xEB,0x2A,0x4F,0x5C,0x09,0x23,0x23,0x23,0x7E,0xEB,0xFE,0x4B,0x28,0x08,0xFE,0x53,
0x28,0x04,0xFE,0x50,0x20,0xCF,0xCD,0x5D,0x17,0x73,0x23,0x72,0xC9,0xE5,0xCD,0xF1,
0x2B,0x78,0xB1,0x20,0x02,0xCF,0x0E,0xC5,0x1A,0xE6,0xDF,0x4F,0x21,0x7A,0x17,0xCD,
0xDC,0x16,0x30,0xF1,0x4E,0x06,0x00,0x09,0xC1,0xE9,0x4B,0x06,0x53,0x08,0x50,0x0A,
0x00,0x1E,0x01,0x18,0x06,0x1E,0x06,0x18,0x02,0x1E,0x10,0x0B,0x78,0xB1,0x20,0xD5,
0x57,0xE1,0xC9,0x18,0x90,0xED,0x73,0x3F,0x5C,0xFD,0x36,0x02,0x10,0xCD,0xAF,0x0D,
0xFD,0xCB,0x02,0xC6,0xFD,0x46,0x31,0xCD,0x44,0x0E,0xFD,0xCB,0x02,0x86,0xFD,0xCB,
0x30,0xC6,0x2A,0x49,0x5C,0xED,0x5B,0x6C,0x5C,0xA7,0xED,0x52,0x19,0x38,0x22,0xD5,
0xCD,0x6E,0x19,0x11,0xC0,0x02,0xEB,0xED,0x52,0xE3,0xCD,0x6E,0x19,0xC1,0xC5,0xCD,
0xB8,0x19,0xC1,0x09,0x38,0x0E,0xEB,0x56,0x23,0x5E,0x2B,0xED,0x53,0x6C,0x5C,0x18,
0xED,0x22,0x6C,0x5C,0x2A,0x6C,0x5C,0xCD,0x6E,0x19,0x28,0x01,0xEB,0xCD,0x33,0x18,
0xFD,0xCB,0x02,0xA6,0xC9,0x3E,0x03,0x18,0x02,0x3E,0x02,0xFD,0x36,0x02,0x00,0xCD,
0x30,0x25,0xC4,0x01,0x16,0xDF,0xCD,0x70,0x20,0x38,0x14,0xDF,0xFE,0x3B,0x28,0x04,
0xFE,0x2C,0x20,0x06,0xE7,0xCD,0x82,0x1C,0x18,0x08,0xCD,0xE6,0x1C,0x18,0x03,0xCD,
0xDE,0x1C,0xCD,0xEE,0x1B,0xCD,0x99,0x1E,0x78,0xE6,0x3F,0x67,0x69,0x22,0x49,0x5C,
0xCD,0x6E,0x19,0x1E,0x01,0xCD,0x55,0x18,0xD7,0xFD,0xCB,0x02,0x66,0x28,0xF6,0x3A,
0x6B,0x5C,0xFD,0x96,0x4F,0x20,0xEE,0xAB,0xC8,0xE5,0xD5,0x21,0x6C,0x5C,0xCD,0x0F,
0x19,0xD1,0xE1,0x18,0xE0,0xED,0x4B,0x49,0x5C,0xCD,0x80,0x19,0x16,0x3E,0x28,0x05,
0x11,0x00,0x00,0xCB,0x13,0xFD,0x73,0x2D,0x7E,0xFE,0x40,0xC1,0xD0,0xC5,0xCD,0x28,
0x1A,0x23,0x23,0x23,0xFD,0xCB,0x01,0x86,0x7A,0xA7,0x28,0x05,0xD7,0xFD,0xCB,0x01,
0xC6,0xD5,0xEB,0xFD,0xCB,0x30,0x96,0x21,0x3B,0x5C,0xCB,0x96,0xFD,0xCB,0x37,0x6E,
0x28,0x02,0xCB,0xD6,0x2A,0x5F,0x5C,0xA7,0xED,0x52,0x20,0x05,0x3E,0x3F,0xCD,0xC1,
0x18,0xCD,0xE1,0x18,0xEB,0x7E,0xCD,0xB6,0x18,0x23,0xFE,0x0D,0x28,0x06,0xEB,0xCD,
0x37,0x19,0x18,0xE0,0xD1,0xC9,0xFE,0x0E,0xC0,0x23,0x23,0x23,0x23,0x23,0x23,0x7E,
0xC9,0xD9,0x2A,0x8F,0x5C,0xE5,0xCB,0xBC,0xCB,0xFD,0x22,0x8F,0x5C,0x21,0x91,0x5C,
0x56,0xD5,0x36,0x00,0xCD,0xF4,0x09,0xE1,0xFD,0x74,0x57,0xE1,0x22,0x8F,0x5C,0xD9,
0xC9,0x2A,0x5B,0x5C,0xA7,0xED,0x52,0xC0,0x3A,0x41,0x5C,0xCB,0x07,0x28,0x04,0xC6,
0x43,0x18,0x16,0x21,0x3B,0x5C,0xCB,0x9E,0x3E,0x4B,0xCB,0x56,0x28,0x0B,0xCB,0xDE,
0x3C,0xFD,0xCB,0x30,0x5E,0x28,0x02,0x3E,0x43,0xD5,0xCD,0xC1,0x18,0xD1,0xC9,0x5E,
0x23,0x56,0xE5,0xEB,0x23,0xCD,0x6E,0x19,0xCD,0x95,0x16,0xE1,0xFD,0xCB,0x37,0x6E,
0xC0,0x72,0x2B,0x73,0xC9,0x7B,0xA7,0xF8,0x18,0x0D,0xAF,0x09,0x3C,0x38,0xFC,0xED,
0x42,0x3D,0x28,0xF1,0xC3,0xEF,0x15,0xCD,0x1B,0x2D,0x30,0x30,0xFE,0x21,0x38,0x2C,
0xFD,0xCB,0x01,0x96,0xFE,0xCB,0x28,0x24,0xFE,0x3A,0x20,0x0E,0xFD,0xCB,0x37,0x6E,
0x20,0x16,0xFD,0xCB,0x30,0x56,0x28,0x14,0x18,0x0E,0xFE,0x22,0x20,0x0A,0xF5,0x3A,
0x6A,0x5C,0xEE,0x04,0x32,0x6A,0x5C,0xF1,0xFD,0xCB,0x01,0xD6,0xD7,0xC9,0xE5,0x2A,
0x53,0x5C,0x54,0x5D,0xC1,0xCD,0x80,0x19,0xD0,0xC5,0xCD,0xB8,0x19,0xEB,0x18,0xF4,
0x7E,0xB8,0xC0,0x23,0x7E,0x2B,0xB9,0xC9,0x23,0x23,0x23,0x22,0x5D,0x5C,0x0E,0x00,
0x15,0xC8,0xE7,0xBB,0x20,0x04,0xA7,0xC9,0x23,0x7E,0xCD,0xB6,0x18,0x22,0x5D,0x5C,
0xFE,0x22,0x20,0x01,0x0D,0xFE,0x3A,0x28,0x04,0xFE,0xCB,0x20,0x04,0xCB,0x41,0x28,
0xDF,0xFE,0x0D,0x20,0xE3,0x15,0x37,0xC9,0xE5,0x7E,0xFE,0x40,0x38,0x17,0xCB,0x6F,
0x28,0x14,0x87,0xFA,0xC7,0x19,0x3F,0x01,0x05,0x00,0x30,0x02,0x0E,0x12,0x17,0x23,
0x7E,0x30,0xFB,0x18,0x06,0x23,0x23,0x4E,0x23,0x46,0x23,0x09,0xD1,0xA7,0xED,0x52,
0x44,0x4D,0x19,0xEB,0xC9,0xCD,0xDD,0x19,0xC5,0x78,0x2F,0x47,0x79,0x2F,0x4F,0x03,
0xCD,0x64,0x16,0xEB,0xE1,0x19,0xD5,0xED,0xB0,0xE1,0xC9,0x2A,0x59,0x5C,0x2B,0x22,
0x5D,0x5C,0xE7,0x21,0x92,0x5C,0x22,0x65,0x5C,0xCD,0x3B,0x2D,0xCD,0xA2,0x2D,0x38,
0x04,0x21,0xF0,0xD8,0x09,0xDA,0x8A,0x1C,0xC3,0xC5,0x16,0xD5,0xE5,0xAF,0xCB,0x78,
0x20,0x20,0x60,0x69,0x1E,0xFF,0x18,0x08,0xD5,0x56,0x23,0x5E,0xE5,0xEB,0x1E,0x20,
0x01,0x18,0xFC,0xCD,0x2A,0x19,0x01,0x9C,0xFF,0xCD,0x2A,0x19,0x0E,0xF6,0xCD,0x2A,
0x19,0x7D,0xCD,0xEF,0x15,0xE1,0xD1,0xC9,0xB1,0xCB,0xBC,0xBF,0xC4,0xAF,0xB4,0x93,
0x91,0x92,0x95,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x7F,0x81,0x2E,0x6C,0x6E,0x70,
0x48,0x94,0x56,0x3F,0x41,0x2B,0x17,0x1F,0x37,0x77,0x44,0x0F,0x59,0x2B,0x43,0x2D,
0x51,0x3A,0x6D,0x42,0x0D,0x49,0x5C,0x44,0x15,0x5D,0x01,0x3D,0x02,0x06,0x00,0x67,
0x1E,0x06,0xCB,0x05,0xF0,0x1C,0x06,0x00,0xED,0x1E,0x00,0xEE,0x1C,0x00,0x23,0x1F,
0x04,0x3D,0x06,0xCC,0x06,0x05,0x03,0x1D,0x04,0x00,0xAB,0x1D,0x05,0xCD,0x1F,0x05,
0x89,0x20,0x05,0x02,0x2C,0x05,0xB2,0x1B,0x00,0xB7,0x11,0x03,0xA1,0x1E,0x05,0xF9,
0x17,0x08,0x00,0x80,0x1E,0x03,0x4F,0x1E,0x00,0x5F,0x1E,0x03,0xAC,0x1E,0x00,0x6B,
0x0D,0x09,0x00,0xDC,0x22,0x06,0x00,0x3A,0x1F,0x05,0xED,0x1D,0x05,0x27,0x1E,0x03,
0x42,0x1E,0x09,0x05,0x82,0x23,0x00,0xAC,0x0E,0x05,0xC9,0x1F,0x05,0xF5,0x17,0x0B,
0x0B,0x0B,0x0B,0x08,0x00,0xF8,0x03,0x09,0x05,0x20,0x23,0x07,0x07,0x07,0x07,0x07,
0x07,0x08,0x00,0x7A,0x1E,0x06,0x00,0x94,0x22,0x05,0x60,0x1F,0x06,0x2C,0x0A,0x00,
0x36,0x17,0x06,0x00,0xE5,0x16,0x0A,0x00,0x93,0x17,0x0A,0x2C,0x0A,0x00,0x93,0x17,
0x0A,0x00,0x93,0x17,0x00,0x93,0x17,0xFD,0xCB,0x01,0xBE,0xCD,0xFB,0x19,0xAF,0x32,
0x47,0x5C,0x3D,0x32,0x3A,0x5C,0x18,0x01,0xE7,0xCD,0xBF,0x16,0xFD,0x34,0x0D,0xFA,
0x8A,0x1C,0xDF,0x06,0x00,0xFE,0x0D,0x28,0x7A,0xFE,0x3A,0x28,0xEB,0x21,0x76,0x1B,
0xE5,0x4F,0xE7,0x79,0xD6,0xCE,0xDA,0x8A,0x1C,0x4F,0x21,0x48,0x1A,0x09,0x4E,0x09,
0x18,0x03,0x2A,0x74,0x5C,0x7E,0x23,0x22,0x74,0x5C,0x01,0x52,0x1B,0xC5,0x4F,0xFE,
0x20,0x30,0x0C,0x21,0x01,0x1C,0x06,0x00,0x09,0x4E,0x09,0xE5,0xDF,0x05,0xC9,0xDF,
0xB9,0xC2,0x8A,0x1C,0xE7,0xC9,0xCD,0x54,0x1F,0x38,0x02,0xCF,0x14,0xFD,0xCB,0x0A,
0x7E,0x20,0x71,0x2A,0x42,0x5C,0xCB,0x7C,0x28,0x14,0x21,0xFE,0xFF,0x22,0x45,0x5C,
0x2A,0x61,0x5C,0x2B,0xED,0x5B,0x59,0x5C,0x1B,0x3A,0x44,0x5C,0x18,0x33,0xCD,0x6E,
0x19,0x3A,0x44,0x5C,0x28,0x19,0xA7,0x20,0x43,0x47,0x7E,0xE6,0xC0,0x78,0x28,0x0F,
0xCF,0xFF,0xC1,0xCD,0x30,0x25,0xC8,0x2A,0x55,0x5C,0x3E,0xC0,0xA6,0xC0,0xAF,0xFE,
0x01,0xCE,0x00,0x56,0x23,0x5E,0xED,0x53,0x45,0x5C,0x23,0x5E,0x23,0x56,0xEB,0x19,
0x23,0x22,0x55,0x5C,0xEB,0x22,0x5D,0x5C,0x57,0x1E,0x00,0xFD,0x36,0x0A,0xFF,0x15,
0xFD,0x72,0x0D,0xCA,0x28,0x1B,0x14,0xCD,0x8B,0x19,0x28,0x08,0xCF,0x16,0xCD,0x30,
0x25,0xC0,0xC1,0xC1,0xDF,0xFE,0x0D,0x28,0xBA,0xFE,0x3A,0xCA,0x28,0x1B,0xC3,0x8A,
0x1C,0x0F,0x1D,0x4B,0x09,0x67,0x0B,0x7B,0x8E,0x71,0xB4,0x81,0xCF,0xCD,0xDE,0x1C,
0xBF,0xC1,0xCC,0xEE,0x1B,0xEB,0x2A,0x74,0x5C,0x4E,0x23,0x46,0xEB,0xC5,0xC9,0xCD,
0xB2,0x28,0xFD,0x36,0x37,0x00,0x30,0x08,0xFD,0xCB,0x37,0xCE,0x20,0x18,0xCF,0x01,
0xCC,0x96,0x29,0xFD,0xCB,0x01,0x76,0x20,0x0D,0xAF,0xCD,0x30,0x25,0xC4,0xF1,0x2B,
0x21,0x71,0x5C,0xB6,0x77,0xEB,0xED,0x43,0x72,0x5C,0x22,0x4D,0x5C,0xC9,0xC1,0xCD,
0x56,0x1C,0xCD,0xEE,0x1B,0xC9,0x3A,0x3B,0x5C,0xF5,0xCD,0xFB,0x24,0xF1,0xFD,0x56,
0x01,0xAA,0xE6,0x40,0x20,0x24,0xCB,0x7A,0xC2,0xFF,0x2A,0xC9,0xCD,0xB2,0x28,0xF5,
0x79,0xF6,0x9F,0x3C,0x20,0x14,0xF1,0x18,0xA9,0xE7,0xCD,0x82,0x1C,0xFE,0x2C,0x20,
0x09,0xE7,0xCD,0xFB,0x24,0xFD,0xCB,0x01,0x76,0xC0,0xCF,0x0B,0xCD,0xFB,0x24,0xFD,
0xCB,0x01,0x76,0xC8,0x18,0xF4,0xFD,0xCB,0x01,0x7E,0xFD,0xCB,0x02,0x86,0xC4,0x4D,
0x0D,0xF1,0x3A,0x74,0x5C,0xD6,0x13,0xCD,0xFC,0x21,0xCD,0xEE,0x1B,0x2A,0x8F,0x5C,
0x22,0x8D,0x5C,0x21,0x91,0x5C,0x7E,0x07,0xAE,0xE6,0xAA,0xAE,0x77,0xC9,0xCD,0x30,
0x25,0x28,0x13,0xFD,0xCB,0x02,0x86,0xCD,0x4D,0x0D,0x21,0x90,0x5C,0x7E,0xF6,0xF8,
0x77,0xFD,0xCB,0x57,0xB6,0xDF,0xCD,0xE2,0x21,0x18,0x9F,0xC3,0x05,0x06,0xFE,0x0D,
0x28,0x04,0xFE,0x3A,0x20,0x9C,0xCD,0x30,0x25,0xC8,0xEF,0xA0,0x38,0xC9,0xCF,0x08,
0xC1,0xCD,0x30,0x25,0x28,0x0A,0xEF,0x02,0x38,0xEB,0xCD,0xE9,0x34,0xDA,0xB3,0x1B,
0xC3,0x29,0x1B,0xFE,0xCD,0x20,0x09,0xE7,0xCD,0x82,0x1C,0xCD,0xEE,0x1B,0x18,0x06,
0xCD,0xEE,0x1B,0xEF,0xA1,0x38,0xEF,0xC0,0x02,0x01,0xE0,0x01,0x38,0xCD,0xFF,0x2A,
0x22,0x68,0x5C,0x2B,0x7E,0xCB,0xFE,0x01,0x06,0x00,0x09,0x07,0x38,0x06,0x0E,0x0D,
0xCD,0x55,0x16,0x23,0xE5,0xEF,0x02,0x02,0x38,0xE1,0xEB,0x0E,0x0A,0xED,0xB0,0x2A,
0x45,0x5C,0xEB,0x73,0x23,0x72,0xFD,0x56,0x0D,0x14,0x23,0x72,0xCD,0xDA,0x1D,0xD0,
0xFD,0x46,0x38,0x2A,0x45,0x5C,0x22,0x42,0x5C,0x3A,0x47,0x5C,0xED,0x44,0x57,0x2A,
0x5D,0x5C,0x1E,0xF3,0xC5,0xED,0x4B,0x55,0x5C,0xCD,0x86,0x1D,0xED,0x43,0x55,0x5C,
0xC1,0x38,0x11,0xE7,0xF6,0x20,0xB8,0x28,0x03,0xE7,0x18,0xE8,0xE7,0x3E,0x01,0x92,
0x32,0x44,0x5C,0xC9,0xCF,0x11,0x7E,0xFE,0x3A,0x28,0x18,0x23,0x7E,0xE6,0xC0,0x37,
0xC0,0x46,0x23,0x4E,0xED,0x43,0x42,0x5C,0x23,0x4E,0x23,0x46,0xE5,0x09,0x44,0x4D,
0xE1,0x16,0x00,0xC5,0xCD,0x8B,0x19,0xC1,0xD0,0x18,0xE0,0xFD,0xCB,0x37,0x4E,0xC2,
0x2E,0x1C,0x2A,0x4D,0x5C,0xCB,0x7E,0x28,0x1F,0x23,0x22,0x68,0x5C,0xEF,0xE0,0xE2,
0x0F,0xC0,0x02,0x38,0xCD,0xDA,0x1D,0xD8,0x2A,0x68,0x5C,0x11,0x0F,0x00,0x19,0x5E,
0x23,0x56,0x23,0x66,0xEB,0xC3,0x73,0x1E,0xCF,0x00,0xEF,0xE1,0xE0,0xE2,0x36,0x00,
0x02,0x01,0x03,0x37,0x00,0x04,0x38,0xA7,0xC9,0x38,0x37,0xC9,0xE7,0xCD,0x1F,0x1C,
0xCD,0x30,0x25,0x28,0x29,0xDF,0x22,0x5F,0x5C,0x2A,0x57,0x5C,0x7E,0xFE,0x2C,0x28,
0x09,0x1E,0xE4,0xCD,0x86,0x1D,0x30,0x02,0xCF,0x0D,0xCD,0x77,0x00,0xCD,0x56,0x1C,
0xDF,0x22,0x57,0x5C,0x2A,0x5F,0x5C,0xFD,0x36,0x26,0x00,0xCD,0x78,0x00,0xDF,0xFE,
0x2C,0x28,0xC9,0xCD,0xEE,0x1B,0xC9,0xCD,0x30,0x25,0x20,0x0B,0xCD,0xFB,0x24,0xFE,
0x2C,0xC4,0xEE,0x1B,0xE7,0x18,0xF5,0x3E,0xE4,0x47,0xED,0xB9,0x11,0x00,0x02,0xC3,
0x8B,0x19,0xCD,0x99,0x1E,0x60,0x69,0xCD,0x6E,0x19,0x2B,0x22,0x57,0x5C,0xC9,0xCD,
0x99,0x1E,0x78,0xB1,0x20,0x04,0xED,0x4B,0x78,0x5C,0xED,0x43,0x76,0x5C,0xC9,0x2A,
0x6E,0x5C,0xFD,0x56,0x36,0x18,0x0C,0xCD,0x99,0x1E,0x60,0x69,0x16,0x00,0x7C,0xFE,
0xF0,0x30,0x2C,0x22,0x42,0x5C,0xFD,0x72,0x0A,0xC9,0xCD,0x85,0x1E,0xED,0x79,0xC9,
0xCD,0x85,0x1E,0x02,0xC9,0xCD,0xD5,0x2D,0x38,0x15,0x28,0x02,0xED,0x44,0xF5,0xCD,
0x99,0x1E,0xF1,0xC9,0xCD,0xD5,0x2D,0x18,0x03,0xCD,0xA2,0x2D,0x38,0x01,0xC8,0xCF,
0x0A,0xCD,0x67,0x1E,0x01,0x00,0x00,0xCD,0x45,0x1E,0x18,0x03,0xCD,0x99,0x1E,0x78,
0xB1,0x20,0x04,0xED,0x4B,0xB2,0x5C,0xC5,0xED,0x5B,0x4B,0x5C,0x2A,0x59,0x5C,0x2B,
0xCD,0xE5,0x19,0xCD,0x6B,0x0D,0x2A,0x65,0x5C,0x11,0x32,0x00,0x19,0xD1,0xED,0x52,
0x30,0x08,0x2A,0xB4,0x5C,0xA7,0xED,0x52,0x30,0x02,0xCF,0x15,0xEB,0x22,0xB2,0x5C,
0xD1,0xC1,0x36,0x3E,0x2B,0xF9,0xC5,0xED,0x73,0x3D,0x5C,0xEB,0xE9,0xD1,0xFD,0x66,
0x0D,0x24,0xE3,0x33,0xED,0x4B,0x45,0x5C,0xC5,0xE5,0xED,0x73,0x3D,0x5C,0xD5,0xCD,
0x67,0x1E,0x01,0x14,0x00,0x2A,0x65,0x5C,0x09,0x38,0x0A,0xEB,0x21,0x50,0x00,0x19,
0x38,0x03,0xED,0x72,0xD8,0x2E,0x03,0xC3,0x55,0x00,0x01,0x00,0x00,0xCD,0x05,0x1F,
0x44,0x4D,0xC9,0xC1,0xE1,0xD1,0x7A,0xFE,0x3E,0x28,0x0B,0x3B,0xE3,0xEB,0xED,0x73,
0x3D,0x5C,0xC5,0xC3,0x73,0x1E,0xD5,0xE5,0xCF,0x06,0xCD,0x99,0x1E,0x76,0x0B,0x78,
0xB1,0x28,0x0C,0x78,0xA1,0x3C,0x20,0x01,0x03,0xFD,0xCB,0x01,0x6E,0x28,0xEE,0xFD,
0xCB,0x01,0xAE,0xC9,0x3E,0x7F,0xDB,0xFE,0x1F,0xD8,0x3E,0xFE,0xDB,0xFE,0x1F,0xC9,
0xCD,0x30,0x25,0x28,0x05,0x3E,0xCE,0xC3,0x39,0x1E,0xFD,0xCB,0x01,0xF6,0xCD,0x8D,
0x2C,0x30,0x16,0xE7,0xFE,0x24,0x20,0x05,0xFD,0xCB,0x01,0xB6,0xE7,0xFE,0x28,0x20,
0x3C,0xE7,0xFE,0x29,0x28,0x20,0xCD,0x8D,0x2C,0xD2,0x8A,0x1C,0xEB,0xE7,0xFE,0x24,
0x20,0x02,0xEB,0xE7,0xEB,0x01,0x06,0x00,0xCD,0x55,0x16,0x23,0x23,0x36,0x0E,0xFE,
0x2C,0x20,0x03,0xE7,0x18,0xE0,0xFE,0x29,0x20,0x13,0xE7,0xFE,0x3D,0x20,0x0E,0xE7,
0x3A,0x3B,0x5C,0xF5,0xCD,0xFB,0x24,0xF1,0xFD,0xAE,0x01,0xE6,0x40,0xC2,0x8A,0x1C,
0xCD,0xEE,0x1B,0xCD,0x30,0x25,0xE1,0xC8,0xE9,0x3E,0x03,0x18,0x02,0x3E,0x02,0xCD,
0x30,0x25,0xC4,0x01,0x16,0xCD,0x4D,0x0D,0xCD,0xDF,0x1F,0xCD,0xEE,0x1B,0xC9,0xDF,
0xCD,0x45,0x20,0x28,0x0D,0xCD,0x4E,0x20,0x28,0xFB,0xCD,0xFC,0x1F,0xCD,0x4E,0x20,
0x28,0xF3,0xFE,0x29,0xC8,0xCD,0xC3,0x1F,0x3E,0x0D,0xD7,0xC9,0xDF,0xFE,0xAC,0x20,
0x0D,0xCD,0x79,0x1C,0xCD,0xC3,0x1F,0xCD,0x07,0x23,0x3E,0x16,0x18,0x10,0xFE,0xAD,
0x20,0x12,0xE7,0xCD,0x82,0x1C,0xCD,0xC3,0x1F,0xCD,0x99,0x1E,0x3E,0x17,0xD7,0x79,
0xD7,0x78,0xD7,0xC9,0xCD,0xF2,0x21,0xD0,0xCD,0x70,0x20,0xD0,0xCD,0xFB,0x24,0xCD,
0xC3,0x1F,0xFD,0xCB,0x01,0x76,0xCC,0xF1,0x2B,0xC2,0xE3,0x2D,0x78,0xB1,0x0B,0xC8,
0x1A,0x13,0xD7,0x18,0xF7,0xFE,0x29,0xC8,0xFE,0x0D,0xC8,0xFE,0x3A,0xC9,0xDF,0xFE,
0x3B,0x28,0x14,0xFE,0x2C,0x20,0x0A,0xCD,0x30,0x25,0x28,0x0B,0x3E,0x06,0xD7,0x18,
0x06,0xFE,0x27,0xC0,0xCD,0xF5,0x1F,0xE7,0xCD,0x45,0x20,0x20,0x01,0xC1,0xBF,0xC9,
0xFE,0x23,0x37,0xC0,0xE7,0xCD,0x82,0x1C,0xA7,0xCD,0xC3,0x1F,0xCD,0x94,0x1E,0xFE,
0x10,0xD2,0x0E,0x16,0xCD,0x01,0x16,0xA7,0xC9,0xCD,0x30,0x25,0x28,0x08,0x3E,0x01,
0xCD,0x01,0x16,0xCD,0x6E,0x0D,0xFD,0x36,0x02,0x01,0xCD,0xC1,0x20,0xCD,0xEE,0x1B,
0xED,0x4B,0x88,0x5C,0x3A,0x6B,0x5C,0xB8,0x38,0x03,0x0E,0x21,0x47,0xED,0x43,0x88,
0x5C,0x3E,0x19,0x90,0x32,0x8C,0x5C,0xFD,0xCB,0x02,0x86,0xCD,0xD9,0x0D,0xC3,0x6E,
0x0D,0xCD,0x4E,0x20,0x28,0xFB,0xFE,0x28,0x20,0x0E,0xE7,0xCD,0xDF,0x1F,0xDF,0xFE,
0x29,0xC2,0x8A,0x1C,0xE7,0xC3,0xB2,0x21,0xFE,0xCA,0x20,0x11,0xE7,0xCD,0x1F,0x1C,
0xFD,0xCB,0x37,0xFE,0xFD,0xCB,0x01,0x76,0xC2,0x8A,0x1C,0x18,0x0D,0xCD,0x8D,0x2C,
0xD2,0xAF,0x21,0xCD,0x1F,0x1C,0xFD,0xCB,0x37,0xBE,0xCD,0x30,0x25,0xCA,0xB2,0x21,
0xCD,0xBF,0x16,0x21,0x71,0x5C,0xCB,0xB6,0xCB,0xEE,0x01,0x01,0x00,0xCB,0x7E,0x20,
0x0B,0x3A,0x3B,0x5C,0xE6,0x40,0x20,0x02,0x0E,0x03,0xB6,0x77,0xF7,0x36,0x0D,0x79,
0x0F,0x0F,0x30,0x05,0x3E,0x22,0x12,0x2B,0x77,0x22,0x5B,0x5C,0xFD,0xCB,0x37,0x7E,
0x20,0x2C,0x2A,0x5D,0x5C,0xE5,0x2A,0x3D,0x5C,0xE5,0x21,0x3A,0x21,0xE5,0xFD,0xCB,
0x30,0x66,0x28,0x04,0xED,0x73,0x3D,0x5C,0x2A,0x61,0x5C,0xCD,0xA7,0x11,0xFD,0x36,
0x00,0xFF,0xCD,0x2C,0x0F,0xFD,0xCB,0x01,0xBE,0xCD,0xB9,0x21,0x18,0x03,0xCD,0x2C,
0x0F,0xFD,0x36,0x22,0x00,0xCD,0xD6,0x21,0x20,0x0A,0xCD,0x1D,0x11,0xED,0x4B,0x82,
0x5C,0xCD,0xD9,0x0D,0x21,0x71,0x5C,0xCB,0xAE,0xCB,0x7E,0xCB,0xBE,0x20,0x1C,0xE1,
0xE1,0x22,0x3D,0x5C,0xE1,0x22,0x5F,0x5C,0xFD,0xCB,0x01,0xFE,0xCD,0xB9,0x21,0x2A,
0x5F,0x5C,0xFD,0x36,0x26,0x00,0x22,0x5D,0x5C,0x18,0x17,0x2A,0x63,0x5C,0xED,0x5B,
0x61,0x5C,0x37,0xED,0x52,0x44,0x4D,0xCD,0xB2,0x2A,0xCD,0xFF,0x2A,0x18,0x03,0xCD,
0xFC,0x1F,0xCD,0x4E,0x20,0xCA,0xC1,0x20,0xC9,0x2A,0x61,0x5C,0x22,0x5D,0x5C,0xDF,
0xFE,0xE2,0x28,0x0C,0x3A,0x71,0x5C,0xCD,0x59,0x1C,0xDF,0xFE,0x0D,0xC8,0xCF,0x0B,
0xCD,0x30,0x25,0xC8,0xCF,0x10,0x2A,0x51,0x5C,0x23,0x23,0x23,0x23,0x7E,0xFE,0x4B,
0xC9,0xE7,0xCD,0xF2,0x21,0xD8,0xDF,0xFE,0x2C,0x28,0xF6,0xFE,0x3B,0x28,0xF2,0xC3,
0x8A,0x1C,0xFE,0xD9,0xD8,0xFE,0xDF,0x3F,0xD8,0xF5,0xE7,0xF1,0xD6,0xC9,0xF5,0xCD,
0x82,0x1C,0xF1,0xA7,0xCD,0xC3,0x1F,0xF5,0xCD,0x94,0x1E,0x57,0xF1,0xD7,0x7A,0xD7,
0xC9,0xD6,0x11,0xCE,0x00,0x28,0x1D,0xD6,0x02,0xCE,0x00,0x28,0x56,0xFE,0x01,0x7A,
0x06,0x01,0x20,0x04,0x07,0x07,0x06,0x04,0x4F,0x7A,0xFE,0x02,0x30,0x16,0x79,0x21,
0x91,0x5C,0x18,0x38,0x7A,0x06,0x07,0x38,0x05,0x07,0x07,0x07,0x06,0x38,0x4F,0x7A,
0xFE,0x0A,0x38,0x02,0xCF,0x13,0x21,0x8F,0x5C,0xFE,0x08,0x38,0x0B,0x7E,0x28,0x07,
0xB0,0x2F,0xE6,0x24,0x28,0x01,0x78,0x4F,0x79,0xCD,0x6C,0x22,0x3E,0x07,0xBA,0x9F,
0xCD,0x6C,0x22,0x07,0x07,0xE6,0x50,0x47,0x3E,0x08,0xBA,0x9F,0xAE,0xA0,0xAE,0x77,
0x23,0x78,0xC9,0x9F,0x7A,0x0F,0x06,0x80,0x20,0x03,0x0F,0x06,0x40,0x4F,0x7A,0xFE,
0x08,0x28,0x04,0xFE,0x02,0x30,0xBD,0x79,0x21,0x8F,0x5C,0xCD,0x6C,0x22,0x79,0x0F,
0x0F,0x0F,0x18,0xD8,0xCD,0x94,0x1E,0xFE,0x08,0x30,0xA9,0xD3,0xFE,0x07,0x07,0x07,
0xCB,0x6F,0x20,0x02,0xEE,0x07,0x32,0x48,0x5C,0xC9,0x3E,0xAF,0x90,0xDA,0xF9,0x24,
0x47,0xA7,0x1F,0x37,0x1F,0xA7,0x1F,0xA8,0xE6,0xF8,0xA8,0x67,0x79,0x07,0x07,0x07,
0xA8,0xE6,0xC7,0xA8,0x07,0x07,0x6F,0x79,0xE6,0x07,0xC9,0xCD,0x07,0x23,0xCD,0xAA,
0x22,0x47,0x04,0x7E,0x07,0x10,0xFD,0xE6,0x01,0xC3,0x28,0x2D,0xCD,0x07,0x23,0xCD,
0xE5,0x22,0xC3,0x4D,0x0D,0xED,0x43,0x7D,0x5C,0xCD,0xAA,0x22,0x47,0x04,0x3E,0xFE,
0x0F,0x10,0xFD,0x47,0x7E,0xFD,0x4E,0x57,0xCB,0x41,0x20,0x01,0xA0,0xCB,0x51,0x20,
0x02,0xA8,0x2F,0x77,0xC3,0xDB,0x0B,0xCD,0x14,0x23,0x47,0xC5,0xCD,0x14,0x23,0x59,
0xC1,0x51,0x4F,0xC9,0xCD,0xD5,0x2D,0xDA,0xF9,0x24,0x0E,0x01,0xC8,0x0E,0xFF,0xC9,
0xDF,0xFE,0x2C,0xC2,0x8A,0x1C,0xE7,0xCD,0x82,0x1C,0xCD,0xEE,0x1B,0xEF,0x2A,0x3D,
0x38,0x7E,0xFE,0x81,0x30,0x05,0xEF,0x02,0x38,0x18,0xA1,0xEF,0xA3,0x38,0x36,0x83,
0xEF,0xC5,0x02,0x38,0xCD,0x7D,0x24,0xC5,0xEF,0x31,0xE1,0x04,0x38,0x7E,0xFE,0x80,
0x30,0x08,0xEF,0x02,0x02,0x38,0xC1,0xC3,0xDC,0x22,0xEF,0xC2,0x01,0xC0,0x02,0x03,
0x01,0xE0,0x0F,0xC0,0x01,0x31,0xE0,0x01,0x31,0xE0,0xA0,0xC1,0x02,0x38,0xFD,0x34,
0x62,0xCD,0x94,0x1E,0x6F,0xE5,0xCD,0x94,0x1E,0xE1,0x67,0x22,0x7D,0x5C,0xC1,0xC3,
0x20,0x24,0xDF,0xFE,0x2C,0x28,0x06,0xCD,0xEE,0x1B,0xC3,0x77,0x24,0xE7,0xCD,0x82,
0x1C,0xCD,0xEE,0x1B,0xEF,0xC5,0xA2,0x04,0x1F,0x31,0x30,0x30,0x00,0x06,0x02,0x38,
0xC3,0x77,0x24,0xC0,0x02,0xC1,0x02,0x31,0x2A,0xE1,0x01,0xE1,0x2A,0x0F,0xE0,0x05,
0x2A,0xE0,0x01,0x3D,0x38,0x7E,0xFE,0x81,0x30,0x07,0xEF,0x02,0x02,0x38,0xC3,0x77,
0x24,0xCD,0x7D,0x24,0xC5,0xEF,0x02,0xE1,0x01,0x05,0xC1,0x02,0x01,0x31,0xE1,0x04,
0xC2,0x02,0x01,0x31,0xE1,0x04,0xE2,0xE5,0xE0,0x03,0xA2,0x04,0x31,0x1F,0xC5,0x02,
0x20,0xC0,0x02,0xC2,0x02,0xC1,0xE5,0x04,0xE0,0xE2,0x04,0x0F,0xE1,0x01,0xC1,0x02,
0xE0,0x04,0xE2,0xE5,0x04,0x03,0xC2,0x2A,0xE1,0x2A,0x0F,0x02,0x38,0x1A,0xFE,0x81,
0xC1,0xDA,0x77,0x24,0xC5,0xEF,0x01,0x38,0x3A,0x7D,0x5C,0xCD,0x28,0x2D,0xEF,0xC0,
0x0F,0x01,0x38,0x3A,0x7E,0x5C,0xCD,0x28,0x2D,0xEF,0xC5,0x0F,0xE0,0xE5,0x38,0xC1,
0x05,0x28,0x3C,0x18,0x14,0xEF,0xE1,0x31,0xE3,0x04,0xE2,0xE4,0x04,0x03,0xC1,0x02,
0xE4,0x04,0xE2,0xE3,0x04,0x0F,0xC2,0x02,0x38,0xC5,0xEF,0xC0,0x02,0xE1,0x0F,0x31,
0x38,0x3A,0x7D,0x5C,0xCD,0x28,0x2D,0xEF,0x03,0xE0,0xE2,0x0F,0xC0,0x01,0xE0,0x38,
0x3A,0x7E,0x5C,0xCD,0x28,0x2D,0xEF,0x03,0x38,0xCD,0xB7,0x24,0xC1,0x10,0xC6,0xEF,
0x02,0x02,0x01,0x38,0x3A,0x7D,0x5C,0xCD,0x28,0x2D,0xEF,0x03,0x01,0x38,0x3A,0x7E,
0x5C,0xCD,0x28,0x2D,0xEF,0x03,0x38,0xCD,0xB7,0x24,0xC3,0x4D,0x0D,0xEF,0x31,0x28,
0x34,0x32,0x00,0x01,0x05,0xE5,0x01,0x05,0x2A,0x38,0xCD,0xD5,0x2D,0x38,0x06,0xE6,
0xFC,0xC6,0x04,0x30,0x02,0x3E,0xFC,0xF5,0xCD,0x28,0x2D,0xEF,0xE5,0x01,0x05,0x31,
0x1F,0xC4,0x02,0x31,0xA2,0x04,0x1F,0xC1,0x01,0xC0,0x02,0x31,0x04,0x31,0x0F,0xA1,
0x03,0x1B,0xC3,0x02,0x38,0xC1,0xC9,0xCD,0x07,0x23,0x79,0xB8,0x30,0x06,0x69,0xD5,
0xAF,0x5F,0x18,0x07,0xB1,0xC8,0x68,0x41,0xD5,0x16,0x00,0x60,0x78,0x1F,0x85,0x38,
0x03,0xBC,0x38,0x07,0x94,0x4F,0xD9,0xC1,0xC5,0x18,0x04,0x4F,0xD5,0xD9,0xC1,0x2A,
0x7D,0x5C,0x78,0x84,0x47,0x79,0x3C,0x85,0x38,0x0D,0x28,0x0D,0x3D,0x4F,0xCD,0xE5,
0x22,0xD9,0x79,0x10,0xD9,0xD1,0xC9,0x28,0xF3,0xCF,0x0A,0xDF,0x06,0x00,0xC5,0x4F,
0x21,0x96,0x25,0xCD,0xDC,0x16,0x79,0xD2,0x84,0x26,0x06,0x00,0x4E,0x09,0xE9,0xCD,
0x74,0x00,0x03,0xFE,0x0D,0xCA,0x8A,0x1C,0xFE,0x22,0x20,0xF3,0xCD,0x74,0x00,0xFE,
0x22,0xC9,0xE7,0xFE,0x28,0x20,0x06,0xCD,0x79,0x1C,0xDF,0xFE,0x29,0xC2,0x8A,0x1C,
0xFD,0xCB,0x01,0x7E,0xC9,0xCD,0x07,0x23,0x2A,0x36,0x5C,0x11,0x00,0x01,0x19,0x79,
0x0F,0x0F,0x0F,0xE6,0xE0,0xA8,0x5F,0x79,0xE6,0x18,0xEE,0x40,0x57,0x06,0x60,0xC5,
0xD5,0xE5,0x1A,0xAE,0x28,0x04,0x3C,0x20,0x1A,0x3D,0x4F,0x06,0x07,0x14,0x23,0x1A,
0xAE,0xA9,0x20,0x0F,0x10,0xF7,0xC1,0xC1,0xC1,0x3E,0x80,0x90,0x01,0x01,0x00,0xF7,
0x12,0x18,0x0A,0xE1,0x11,0x08,0x00,0x19,0xD1,0xC1,0x10,0xD3,0x48,0xC3,0xB2,0x2A,
0xCD,0x07,0x23,0x79,0x0F,0x0F,0x0F,0x4F,0xE6,0xE0,0xA8,0x6F,0x79,0xE6,0x03,0xEE,
0x58,0x67,0x7E,0xC3,0x28,0x2D,0x22,0x1C,0x28,0x4F,0x2E,0xF2,0x2B,0x12,0xA8,0x56,
0xA5,0x57,0xA7,0x84,0xA6,0x8F,0xC4,0xE6,0xAA,0xBF,0xAB,0xC7,0xA9,0xCE,0x00,0xE7,
0xC3,0xFF,0x24,0xDF,0x23,0xE5,0x01,0x00,0x00,0xCD,0x0F,0x25,0x20,0x1B,0xCD,0x0F,
0x25,0x28,0xFB,0xCD,0x30,0x25,0x28,0x11,0xF7,0xE1,0xD5,0x7E,0x23,0x12,0x13,0xFE,
0x22,0x20,0xF8,0x7E,0x23,0xFE,0x22,0x28,0xF2,0x0B,0xD1,0x21,0x3B,0x5C,0xCB,0xB6,
0xCB,0x7E,0xC4,0xB2,0x2A,0xC3,0x12,0x27,0xE7,0xCD,0xFB,0x24,0xFE,0x29,0xC2,0x8A,
0x1C,0xE7,0xC3,0x12,0x27,0xC3,0xBD,0x27,0xCD,0x30,0x25,0x28,0x28,0xED,0x4B,0x76,
0x5C,0xCD,0x2B,0x2D,0xEF,0xA1,0x0F,0x34,0x37,0x16,0x04,0x34,0x80,0x41,0x00,0x00,
0x80,0x32,0x02,0xA1,0x03,0x31,0x38,0xCD,0xA2,0x2D,0xED,0x43,0x76,0x5C,0x7E,0xA7,
0x28,0x03,0xD6,0x10,0x77,0x18,0x09,0xCD,0x30,0x25,0x28,0x04,0xEF,0xA3,0x38,0x34,
0xE7,0xC3,0xC3,0x26,0x01,0x5A,0x10,0xE7,0xFE,0x23,0xCA,0x0D,0x27,0x21,0x3B,0x5C,
0xCB,0xB6,0xCB,0x7E,0x28,0x1F,0xCD,0x8E,0x02,0x0E,0x00,0x20,0x13,0xCD,0x1E,0x03,
0x30,0x0E,0x15,0x5F,0xCD,0x33,0x03,0xF5,0x01,0x01,0x00,0xF7,0xF1,0x12,0x0E,0x01,
0x06,0x00,0xCD,0xB2,0x2A,0xC3,0x12,0x27,0xCD,0x22,0x25,0xC4,0x35,0x25,0xE7,0xC3,
0xDB,0x25,0xCD,0x22,0x25,0xC4,0x80,0x25,0xE7,0x18,0x48,0xCD,0x22,0x25,0xC4,0xCB,
0x22,0xE7,0x18,0x3F,0xCD,0x88,0x2C,0x30,0x56,0xFE,0x41,0x30,0x3C,0xCD,0x30,0x25,
0x20,0x23,0xCD,0x9B,0x2C,0xDF,0x01,0x06,0x00,0xCD,0x55,0x16,0x23,0x36,0x0E,0x23,
0xEB,0x2A,0x65,0x5C,0x0E,0x05,0xA7,0xED,0x42,0x22,0x65,0x5C,0xED,0xB0,0xEB,0x2B,
0xCD,0x77,0x00,0x18,0x0E,0xDF,0x23,0x7E,0xFE,0x0E,0x20,0xFA,0x23,0xCD,0xB4,0x33,
0x22,0x5D,0x5C,0xFD,0xCB,0x01,0xF6,0x18,0x14,0xCD,0xB2,0x28,0xDA,0x2E,0x1C,0xCC,
0x96,0x29,0x3A,0x3B,0x5C,0xFE,0xC0,0x38,0x04,0x23,0xCD,0xB4,0x33,0x18,0x33,0x01,
0xDB,0x09,0xFE,0x2D,0x28,0x27,0x01,0x18,0x10,0xFE,0xAE,0x28,0x20,0xD6,0xAF,0xDA,
0x8A,0x1C,0x01,0xF0,0x04,0xFE,0x14,0x28,0x14,0xD2,0x8A,0x1C,0x06,0x10,0xC6,0xDC,
0x4F,0xFE,0xDF,0x30,0x02,0xCB,0xB1,0xFE,0xEE,0x38,0x02,0xCB,0xB9,0xC5,0xE7,0xC3,
0xFF,0x24,0xDF,0xFE,0x28,0x20,0x0C,0xFD,0xCB,0x01,0x76,0x20,0x17,0xCD,0x52,0x2A,
0xE7,0x18,0xF0,0x06,0x00,0x4F,0x21,0x95,0x27,0xCD,0xDC,0x16,0x30,0x06,0x4E,0x21,
0xED,0x26,0x09,0x46,0xD1,0x7A,0xB8,0x38,0x3A,0xA7,0xCA,0x18,0x00,0xC5,0x21,0x3B,
0x5C,0x7B,0xFE,0xED,0x20,0x06,0xCB,0x76,0x20,0x02,0x1E,0x99,0xD5,0xCD,0x30,0x25,
0x28,0x09,0x7B,0xE6,0x3F,0x47,0xEF,0x3B,0x38,0x18,0x09,0x7B,0xFD,0xAE,0x01,0xE6,
0x40,0xC2,0x8A,0x1C,0xD1,0x21,0x3B,0x5C,0xCB,0xF6,0xCB,0x7B,0x20,0x02,0xCB,0xB6,
0xC1,0x18,0xC1,0xD5,0x79,0xFD,0xCB,0x01,0x76,0x20,0x15,0xE6,0x3F,0xC6,0x08,0x4F,
0xFE,0x10,0x20,0x04,0xCB,0xF1,0x18,0x08,0x38,0xD7,0xFE,0x17,0x28,0x02,0xCB,0xF9,
0xC5,0xE7,0xC3,0xFF,0x24,0x2B,0xCF,0x2D,0xC3,0x2A,0xC4,0x2F,0xC5,0x5E,0xC6,0x3D,
0xCE,0x3E,0xCC,0x3C,0xCD,0xC7,0xC9,0xC8,0xCA,0xC9,0xCB,0xC5,0xC7,0xC6,0xC8,0x00,
0x06,0x08,0x08,0x0A,0x02,0x03,0x05,0x05,0x05,0x05,0x05,0x05,0x06,0xCD,0x30,0x25,
0x20,0x35,0xE7,0xCD,0x8D,0x2C,0xD2,0x8A,0x1C,0xE7,0xFE,0x24,0xF5,0x20,0x01,0xE7,
0xFE,0x28,0x20,0x12,0xE7,0xFE,0x29,0x28,0x10,0xCD,0xFB,0x24,0xDF,0xFE,0x2C,0x20,
0x03,0xE7,0x18,0xF5,0xFE,0x29,0xC2,0x8A,0x1C,0xE7,0x21,0x3B,0x5C,0xCB,0xB6,0xF1,
0x28,0x02,0xCB,0xF6,0xC3,0x12,0x27,0xE7,0xE6,0xDF,0x47,0xE7,0xD6,0x24,0x4F,0x20,
0x01,0xE7,0xE7,0xE5,0x2A,0x53,0x5C,0x2B,0x11,0xCE,0x00,0xC5,0xCD,0x86,0x1D,0xC1,
0x30,0x02,0xCF,0x18,0xE5,0xCD,0xAB,0x28,0xE6,0xDF,0xB8,0x20,0x08,0xCD,0xAB,0x28,
0xD6,0x24,0xB9,0x28,0x0C,0xE1,0x2B,0x11,0x00,0x02,0xC5,0xCD,0x8B,0x19,0xC1,0x18,
0xD7,0xA7,0xCC,0xAB,0x28,0xD1,0xD1,0xED,0x53,0x5D,0x5C,0xCD,0xAB,0x28,0xE5,0xFE,
0x29,0x28,0x42,0x23,0x7E,0xFE,0x0E,0x16,0x40,0x28,0x07,0x2B,0xCD,0xAB,0x28,0x23,
0x16,0x00,0x23,0xE5,0xD5,0xCD,0xFB,0x24,0xF1,0xFD,0xAE,0x01,0xE6,0x40,0x20,0x2B,
0xE1,0xEB,0x2A,0x65,0x5C,0x01,0x05,0x00,0xED,0x42,0x22,0x65,0x5C,0xED,0xB0,0xEB,
0x2B,0xCD,0xAB,0x28,0xFE,0x29,0x28,0x0D,0xE5,0xDF,0xFE,0x2C,0x20,0x0D,0xE7,0xE1,
0xCD,0xAB,0x28,0x18,0xBE,0xE5,0xDF,0xFE,0x29,0x28,0x02,0xCF,0x19,0xD1,0xEB,0x22,
0x5D,0x5C,0x2A,0x0B,0x5C,0xE3,0x22,0x0B,0x5C,0xD5,0xE7,0xE7,0xCD,0xFB,0x24,0xE1,
0x22,0x5D,0x5C,0xE1,0x22,0x0B,0x5C,0xE7,0xC3,0x12,0x27,0x23,0x7E,0xFE,0x21,0x38,
0xFA,0xC9,0xFD,0xCB,0x01,0xF6,0xDF,0xCD,0x8D,0x2C,0xD2,0x8A,0x1C,0xE5,0xE6,0x1F,
0x4F,0xE7,0xE5,0xFE,0x28,0x28,0x28,0xCB,0xF1,0xFE,0x24,0x28,0x11,0xCB,0xE9,0xCD,
0x88,0x2C,0x30,0x0F,0xCD,0x88,0x2C,0x30,0x16,0xCB,0xB1,0xE7,0x18,0xF6,0xE7,0xFD,
0xCB,0x01,0xB6,0x3A,0x0C,0x5C,0xA7,0x28,0x06,0xCD,0x30,0x25,0xC2,0x51,0x29,0x41,
0xCD,0x30,0x25,0x20,0x08,0x79,0xE6,0xE0,0xCB,0xFF,0x4F,0x18,0x37,0x2A,0x4B,0x5C,
0x7E,0xE6,0x7F,0x28,0x2D,0xB9,0x20,0x22,0x17,0x87,0xF2,0x3F,0x29,0x38,0x30,0xD1,
0xD5,0xE5,0x23,0x1A,0x13,0xFE,0x20,0x28,0xFA,0xF6,0x20,0xBE,0x28,0xF4,0xF6,0x80,
0xBE,0x20,0x06,0x1A,0xCD,0x88,0x2C,0x30,0x15,0xE1,0xC5,0xCD,0xB8,0x19,0xEB,0xC1,
0x18,0xCE,0xCB,0xF8,0xD1,0xDF,0xFE,0x28,0x28,0x09,0xCB,0xE8,0x18,0x0D,0xD1,0xD1,
0xD1,0xE5,0xDF,0xCD,0x88,0x2C,0x30,0x03,0xE7,0x18,0xF8,0xE1,0xCB,0x10,0xCB,0x70,
0xC9,0x2A,0x0B,0x5C,0x7E,0xFE,0x29,0xCA,0xEF,0x28,0x7E,0xF6,0x60,0x47,0x23,0x7E,
0xFE,0x0E,0x28,0x07,0x2B,0xCD,0xAB,0x28,0x23,0xCB,0xA8,0x78,0xB9,0x28,0x12,0x23,
0x23,0x23,0x23,0x23,0xCD,0xAB,0x28,0xFE,0x29,0xCA,0xEF,0x28,0xCD,0xAB,0x28,0x18,
0xD9,0xCB,0x69,0x20,0x0C,0x23,0xED,0x5B,0x65,0x5C,0xCD,0xC0,0x33,0xEB,0x22,0x65,
0x5C,0xD1,0xD1,0xAF,0x3C,0xC9,0xAF,0x47,0xCB,0x79,0x20,0x4B,0xCB,0x7E,0x20,0x0E,
0x3C,0x23,0x4E,0x23,0x46,0x23,0xEB,0xCD,0xB2,0x2A,0xDF,0xC3,0x49,0x2A,0x23,0x23,
0x23,0x46,0xCB,0x71,0x28,0x0A,0x05,0x28,0xE8,0xEB,0xDF,0xFE,0x28,0x20,0x61,0xEB,
0xEB,0x18,0x24,0xE5,0xDF,0xE1,0xFE,0x2C,0x28,0x20,0xCB,0x79,0x28,0x52,0xCB,0x71,
0x20,0x06,0xFE,0x29,0x20,0x3C,0xE7,0xC9,0xFE,0x29,0x28,0x6C,0xFE,0xCC,0x20,0x32,
0xDF,0x2B,0x22,0x5D,0x5C,0x18,0x5E,0x21,0x00,0x00,0xE5,0xE7,0xE1,0x79,0xFE,0xC0,
0x20,0x09,0xDF,0xFE,0x29,0x28,0x51,0xFE,0xCC,0x28,0xE5,0xC5,0xE5,0xCD,0xEE,0x2A,
0xE3,0xEB,0xCD,0xCC,0x2A,0x38,0x19,0x0B,0xCD,0xF4,0x2A,0x09,0xD1,0xC1,0x10,0xB3,
0xCB,0x79,0x20,0x66,0xE5,0xCB,0x71,0x20,0x13,0x42,0x4B,0xDF,0xFE,0x29,0x28,0x02,
0xCF,0x02,0xE7,0xE1,0x11,0x05,0x00,0xCD,0xF4,0x2A,0x09,0xC9,0xCD,0xEE,0x2A,0xE3,
0xCD,0xF4,0x2A,0xC1,0x09,0x23,0x42,0x4B,0xEB,0xCD,0xB1,0x2A,0xDF,0xFE,0x29,0x28,
0x07,0xFE,0x2C,0x20,0xDB,0xCD,0x52,0x2A,0xE7,0xFE,0x28,0x28,0xF8,0xFD,0xCB,0x01,
0xB6,0xC9,0xCD,0x30,0x25,0xC4,0xF1,0x2B,0xE7,0xFE,0x29,0x28,0x50,0xD5,0xAF,0xF5,
0xC5,0x11,0x01,0x00,0xDF,0xE1,0xFE,0xCC,0x28,0x17,0xF1,0xCD,0xCD,0x2A,0xF5,0x50,
0x59,0xE5,0xDF,0xE1,0xFE,0xCC,0x28,0x09,0xFE,0x29,0xC2,0x8A,0x1C,0x62,0x6B,0x18,
0x13,0xE5,0xE7,0xE1,0xFE,0x29,0x28,0x0C,0xF1,0xCD,0xCD,0x2A,0xF5,0xDF,0x60,0x69,
0xFE,0x29,0x20,0xE6,0xF1,0xE3,0x19,0x2B,0xE3,0xA7,0xED,0x52,0x01,0x00,0x00,0x38,
0x07,0x23,0xA7,0xFA,0x20,0x2A,0x44,0x4D,0xD1,0xFD,0xCB,0x01,0xB6,0xCD,0x30,0x25,
0xC8,0xAF,0xFD,0xCB,0x01,0xB6,0xC5,0xCD,0xA9,0x33,0xC1,0x2A,0x65,0x5C,0x77,0x23,
0x73,0x23,0x72,0x23,0x71,0x23,0x70,0x23,0x22,0x65,0x5C,0xC9,0xAF,0xD5,0xE5,0xF5,
0xCD,0x82,0x1C,0xF1,0xCD,0x30,0x25,0x28,0x12,0xF5,0xCD,0x99,0x1E,0xD1,0x78,0xB1,
0x37,0x28,0x05,0xE1,0xE5,0xA7,0xED,0x42,0x7A,0xDE,0x00,0xE1,0xD1,0xC9,0xEB,0x23,
0x5E,0x23,0x56,0xC9,0xCD,0x30,0x25,0xC8,0xCD,0xA9,0x30,0xDA,0x15,0x1F,0xC9,0x2A,
0x4D,0x5C,0xFD,0xCB,0x37,0x4E,0x28,0x5E,0x01,0x05,0x00,0x03,0x23,0x7E,0xFE,0x20,
0x28,0xFA,0x30,0x0B,0xFE,0x10,0x38,0x11,0xFE,0x16,0x30,0x0D,0x23,0x18,0xED,0xCD,
0x88,0x2C,0x38,0xE7,0xFE,0x24,0xCA,0xC0,0x2B,0x79,0x2A,0x59,0x5C,0x2B,0xCD,0x55,
0x16,0x23,0x23,0xEB,0xD5,0x2A,0x4D,0x5C,0x1B,0xD6,0x06,0x47,0x28,0x11,0x23,0x7E,
0xFE,0x21,0x38,0xFA,0xF6,0x20,0x13,0x12,0x10,0xF4,0xF6,0x80,0x12,0x3E,0xC0,0x2A,
0x4D,0x5C,0xAE,0xF6,0x20,0xE1,0xCD,0xEA,0x2B,0xE5,0xEF,0x02,0x38,0xE1,0x01,0x05,
0x00,0xA7,0xED,0x42,0x18,0x40,0xFD,0xCB,0x01,0x76,0x28,0x06,0x11,0x06,0x00,0x19,
0x18,0xE7,0x2A,0x4D,0x5C,0xED,0x4B,0x72,0x5C,0xFD,0xCB,0x37,0x46,0x20,0x30,0x78,
0xB1,0xC8,0xE5,0xF7,0xD5,0xC5,0x54,0x5D,0x23,0x36,0x20,0xED,0xB8,0xE5,0xCD,0xF1,
0x2B,0xE1,0xE3,0xA7,0xED,0x42,0x09,0x30,0x02,0x44,0x4D,0xE3,0xEB,0x78,0xB1,0x28,
0x02,0xED,0xB0,0xC1,0xD1,0xE1,0xEB,0x78,0xB1,0xC8,0xD5,0xED,0xB0,0xE1,0xC9,0x2B,
0x2B,0x2B,0x7E,0xE5,0xC5,0xCD,0xC6,0x2B,0xC1,0xE1,0x03,0x03,0x03,0xC3,0xE8,0x19,
0x3E,0xDF,0x2A,0x4D,0x5C,0xA6,0xF5,0xCD,0xF1,0x2B,0xEB,0x09,0xC5,0x2B,0x22,0x4D,
0x5C,0x03,0x03,0x03,0x2A,0x59,0x5C,0x2B,0xCD,0x55,0x16,0x2A,0x4D,0x5C,0xC1,0xC5,
0x03,0xED,0xB8,0xEB,0x23,0xC1,0x70,0x2B,0x71,0xF1,0x2B,0x77,0x2A,0x59,0x5C,0x2B,
0xC9,0x2A,0x65,0x5C,0x2B,0x46,0x2B,0x4E,0x2B,0x56,0x2B,0x5E,0x2B,0x7E,0x22,0x65,
0x5C,0xC9,0xCD,0xB2,0x28,0xC2,0x8A,0x1C,0xCD,0x30,0x25,0x20,0x08,0xCB,0xB1,0xCD,
0x96,0x29,0xCD,0xEE,0x1B,0x38,0x08,0xC5,0xCD,0xB8,0x19,0xCD,0xE8,0x19,0xC1,0xCB,
0xF9,0x06,0x00,0xC5,0x21,0x01,0x00,0xCB,0x71,0x20,0x02,0x2E,0x05,0xEB,0xE7,0x26,
0xFF,0xCD,0xCC,0x2A,0xDA,0x20,0x2A,0xE1,0xC5,0x24,0xE5,0x60,0x69,0xCD,0xF4,0x2A,
0xEB,0xDF,0xFE,0x2C,0x28,0xE8,0xFE,0x29,0x20,0xBB,0xE7,0xC1,0x79,0x68,0x26,0x00,
0x23,0x23,0x29,0x19,0xDA,0x15,0x1F,0xD5,0xC5,0xE5,0x44,0x4D,0x2A,0x59,0x5C,0x2B,
0xCD,0x55,0x16,0x23,0x77,0xC1,0x0B,0x0B,0x0B,0x23,0x71,0x23,0x70,0xC1,0x78,0x23,
0x77,0x62,0x6B,0x1B,0x36,0x00,0xCB,0x71,0x28,0x02,0x36,0x20,0xC1,0xED,0xB8,0xC1,
0x70,0x2B,0x71,0x2B,0x3D,0x20,0xF8,0xC9,0xCD,0x1B,0x2D,0x3F,0xD8,0xFE,0x41,0x3F,
0xD0,0xFE,0x5B,0xD8,0xFE,0x61,0x3F,0xD0,0xFE,0x7B,0xC9,0xFE,0xC4,0x20,0x19,0x11,
0x00,0x00,0xE7,0xD6,0x31,0xCE,0x00,0x20,0x0A,0xEB,0x3F,0xED,0x6A,0xDA,0xAD,0x31,
0xEB,0x18,0xEF,0x42,0x4B,0xC3,0x2B,0x2D,0xFE,0x2E,0x28,0x0F,0xCD,0x3B,0x2D,0xFE,
0x2E,0x20,0x28,0xE7,0xCD,0x1B,0x2D,0x38,0x22,0x18,0x0A,0xE7,0xCD,0x1B,0x2D,0xDA,
0x8A,0x1C,0xEF,0xA0,0x38,0xEF,0xA1,0xC0,0x02,0x38,0xDF,0xCD,0x22,0x2D,0x38,0x0B,
0xEF,0xE0,0xA4,0x05,0xC0,0x04,0x0F,0x38,0xE7,0x18,0xEF,0xFE,0x45,0x28,0x03,0xFE,
0x65,0xC0,0x06,0xFF,0xE7,0xFE,0x2B,0x28,0x05,0xFE,0x2D,0x20,0x02,0x04,0xE7,0xCD,
0x1B,0x2D,0x38,0xCB,0xC5,0xCD,0x3B,0x2D,0xCD,0xD5,0x2D,0xC1,0xDA,0xAD,0x31,0xA7,
0xFA,0xAD,0x31,0x04,0x28,0x02,0xED,0x44,0xC3,0x4F,0x2D,0xFE,0x30,0xD8,0xFE,0x3A,
0x3F,0xC9,0xCD,0x1B,0x2D,0xD8,0xD6,0x30,0x4F,0x06,0x00,0xFD,0x21,0x3A,0x5C,0xAF,
0x5F,0x51,0x48,0x47,0xCD,0xB6,0x2A,0xEF,0x38,0xA7,0xC9,0xF5,0xEF,0xA0,0x38,0xF1,
0xCD,0x22,0x2D,0xD8,0xEF,0x01,0xA4,0x04,0x0F,0x38,0xCD,0x74,0x00,0x18,0xF1,0x07,
0x0F,0x30,0x02,0x2F,0x3C,0xF5,0x21,0x92,0x5C,0xCD,0x0B,0x35,0xEF,0xA4,0x38,0xF1,
0xCB,0x3F,0x30,0x0D,0xF5,0xEF,0xC1,0xE0,0x00,0x04,0x04,0x33,0x02,0x05,0xE1,0x38,
0xF1,0x28,0x08,0xF5,0xEF,0x31,0x04,0x38,0xF1,0x18,0xE5,0xEF,0x02,0x38,0xC9,0x23,
0x4E,0x23,0x7E,0xA9,0x91,0x5F,0x23,0x7E,0x89,0xA9,0x57,0xC9,0x0E,0x00,0xE5,0x36,
0x00,0x23,0x71,0x23,0x7B,0xA9,0x91,0x77,0x23,0x7A,0x89,0xA9,0x77,0x23,0x36,0x00,
0xE1,0xC9,0xEF,0x38,0x7E,0xA7,0x28,0x05,0xEF,0xA2,0x0F,0x27,0x38,0xEF,0x02,0x38,
0xE5,0xD5,0xEB,0x46,0xCD,0x7F,0x2D,0xAF,0x90,0xCB,0x79,0x42,0x4B,0x7B,0xD1,0xE1,
0xC9,0x57,0x17,0x9F,0x5F,0x4F,0xAF,0x47,0xCD,0xB6,0x2A,0xEF,0x34,0xEF,0x1A,0x20,
0x9A,0x85,0x04,0x27,0x38,0xCD,0xA2,0x2D,0xD8,0xF5,0x05,0x04,0x28,0x03,0xF1,0x37,
0xC9,0xF1,0xC9,0xEF,0x31,0x36,0x00,0x0B,0x31,0x37,0x00,0x0D,0x02,0x38,0x3E,0x30,
0xD7,0xC9,0x2A,0x38,0x3E,0x2D,0xD7,0xEF,0xA0,0xC3,0xC4,0xC5,0x02,0x38,0xD9,0xE5,
0xD9,0xEF,0x31,0x27,0xC2,0x03,0xE2,0x01,0xC2,0x02,0x38,0x7E,0xA7,0x20,0x47,0xCD,
0x7F,0x2D,0x06,0x10,0x7A,0xA7,0x20,0x06,0xB3,0x28,0x09,0x53,0x06,0x08,0xD5,0xD9,
0xD1,0xD9,0x18,0x57,0xEF,0xE2,0x38,0x7E,0xD6,0x7E,0xCD,0xC1,0x2D,0x57,0x3A,0xAC,
0x5C,0x92,0x32,0xAC,0x5C,0x7A,0xCD,0x4F,0x2D,0xEF,0x31,0x27,0xC1,0x03,0xE1,0x38,
0xCD,0xD5,0x2D,0xE5,0x32,0xA1,0x5C,0x3D,0x17,0x9F,0x3C,0x21,0xAB,0x5C,0x77,0x23,
0x86,0x77,0xE1,0xC3,0xCF,0x2E,0xD6,0x80,0xFE,0x1C,0x38,0x13,0xCD,0xC1,0x2D,0xD6,
0x07,0x47,0x21,0xAC,0x5C,0x86,0x77,0x78,0xED,0x44,0xCD,0x4F,0x2D,0x18,0x92,0xEB,
0xCD,0xBA,0x2F,0xD9,0xCB,0xFA,0x7D,0xD9,0xD6,0x80,0x47,0xCB,0x23,0xCB,0x12,0xD9,
0xCB,0x13,0xCB,0x12,0xD9,0x21,0xAA,0x5C,0x0E,0x05,0x7E,0x8F,0x27,0x77,0x2B,0x0D,
0x20,0xF8,0x10,0xE7,0xAF,0x21,0xA6,0x5C,0x11,0xA1,0x5C,0x06,0x09,0xED,0x6F,0x0E,
0xFF,0xED,0x6F,0x20,0x04,0x0D,0x0C,0x20,0x0A,0x12,0x13,0xFD,0x34,0x71,0xFD,0x34,
0x72,0x0E,0x00,0xCB,0x40,0x28,0x01,0x23,0x10,0xE7,0x3A,0xAB,0x5C,0xD6,0x09,0x38,
0x0A,0xFD,0x35,0x71,0x3E,0x04,0xFD,0xBE,0x6F,0x18,0x41,0xEF,0x02,0xE2,0x38,0xEB,
0xCD,0xBA,0x2F,0xD9,0x3E,0x80,0x95,0x2E,0x00,0xCB,0xFA,0xD9,0xCD,0xDD,0x2F,0xFD,
0x7E,0x71,0xFE,0x08,0x38,0x06,0xD9,0xCB,0x12,0xD9,0x18,0x20,0x01,0x00,0x02,0x7B,
0xCD,0x8B,0x2F,0x5F,0x7A,0xCD,0x8B,0x2F,0x57,0xC5,0xD9,0xC1,0x10,0xF1,0x21,0xA1,
0x5C,0x79,0xFD,0x4E,0x71,0x09,0x77,0xFD,0x34,0x71,0x18,0xD3,0xF5,0x21,0xA1,0x5C,
0xFD,0x4E,0x71,0x06,0x00,0x09,0x41,0xF1,0x2B,0x7E,0xCE,0x00,0x77,0xA7,0x28,0x05,
0xFE,0x0A,0x3F,0x30,0x08,0x10,0xF1,0x36,0x01,0x04,0xFD,0x34,0x72,0xFD,0x70,0x71,
0xEF,0x02,0x38,0xD9,0xE1,0xD9,0xED,0x4B,0xAB,0x5C,0x21,0xA1,0x5C,0x78,0xFE,0x09,
0x38,0x04,0xFE,0xFC,0x38,0x26,0xA7,0xCC,0xEF,0x15,0xAF,0x90,0xFA,0x52,0x2F,0x47,
0x18,0x0C,0x79,0xA7,0x28,0x03,0x7E,0x23,0x0D,0xCD,0xEF,0x15,0x10,0xF4,0x79,0xA7,
0xC8,0x04,0x3E,0x2E,0xD7,0x3E,0x30,0x10,0xFB,0x41,0x18,0xE6,0x50,0x15,0x06,0x01,
0xCD,0x4A,0x2F,0x3E,0x45,0xD7,0x4A,0x79,0xA7,0xF2,0x83,0x2F,0xED,0x44,0x4F,0x3E,
0x2D,0x18,0x02,0x3E,0x2B,0xD7,0x06,0x00,0xC3,0x1B,0x1A,0xD5,0x6F,0x26,0x00,0x5D,
0x54,0x29,0x29,0x19,0x29,0x59,0x19,0x4C,0x7D,0xD1,0xC9,0x7E,0x36,0x00,0xA7,0xC8,
0x23,0xCB,0x7E,0xCB,0xFE,0x2B,0xC8,0xC5,0x01,0x05,0x00,0x09,0x41,0x4F,0x37,0x2B,
0x7E,0x2F,0xCE,0x00,0x77,0x10,0xF8,0x79,0xC1,0xC9,0xE5,0xF5,0x4E,0x23,0x46,0x77,
0x23,0x79,0x4E,0xC5,0x23,0x4E,0x23,0x46,0xEB,0x57,0x5E,0xD5,0x23,0x56,0x23,0x5E,
0xD5,0xD9,0xD1,0xE1,0xC1,0xD9,0x23,0x56,0x23,0x5E,0xF1,0xE1,0xC9,0xA7,0xC8,0xFE,
0x21,0x30,0x16,0xC5,0x47,0xD9,0xCB,0x2D,0xCB,0x1A,0xCB,0x1B,0xD9,0xCB,0x1A,0xCB,
0x1B,0x10,0xF2,0xC1,0xD0,0xCD,0x04,0x30,0xC0,0xD9,0xAF,0x2E,0x00,0x57,0x5D,0xD9,
0x11,0x00,0x00,0xC9,0x1C,0xC0,0x14,0xC0,0xD9,0x1C,0x20,0x01,0x14,0xD9,0xC9,0xEB,
0xCD,0x6E,0x34,0xEB,0x1A,0xB6,0x20,0x26,0xD5,0x23,0xE5,0x23,0x5E,0x23,0x56,0x23,
0x23,0x23,0x7E,0x23,0x4E,0x23,0x46,0xE1,0xEB,0x09,0xEB,0x8E,0x0F,0xCE,0x00,0x20,
0x0B,0x9F,0x77,0x23,0x73,0x23,0x72,0x2B,0x2B,0x2B,0xD1,0xC9,0x2B,0xD1,0xCD,0x93,
0x32,0xD9,0xE5,0xD9,0xD5,0xE5,0xCD,0x9B,0x2F,0x47,0xEB,0xCD,0x9B,0x2F,0x4F,0xB8,
0x30,0x03,0x78,0x41,0xEB,0xF5,0x90,0xCD,0xBA,0x2F,0xCD,0xDD,0x2F,0xF1,0xE1,0x77,
0xE5,0x68,0x61,0x19,0xD9,0xEB,0xED,0x4A,0xEB,0x7C,0x8D,0x6F,0x1F,0xAD,0xD9,0xEB,
0xE1,0x1F,0x30,0x08,0x3E,0x01,0xCD,0xDD,0x2F,0x34,0x28,0x23,0xD9,0x7D,0xE6,0x80,
0xD9,0x23,0x77,0x2B,0x28,0x1F,0x7B,0xED,0x44,0x3F,0x5F,0x7A,0x2F,0xCE,0x00,0x57,
0xD9,0x7B,0x2F,0xCE,0x00,0x5F,0x7A,0x2F,0xCE,0x00,0x30,0x07,0x1F,0xD9,0x34,0xCA,
0xAD,0x31,0xD9,0x57,0xD9,0xAF,0xC3,0x55,0x31,0xC5,0x06,0x10,0x7C,0x4D,0x21,0x00,
0x00,0x29,0x38,0x0A,0xCB,0x11,0x17,0x30,0x03,0x19,0x38,0x02,0x10,0xF3,0xC1,0xC9,
0xCD,0xE9,0x34,0xD8,0x23,0xAE,0xCB,0xFE,0x2B,0xC9,0x1A,0xB6,0x20,0x22,0xD5,0xE5,
0xD5,0xCD,0x7F,0x2D,0xEB,0xE3,0x41,0xCD,0x7F,0x2D,0x78,0xA9,0x4F,0xE1,0xCD,0xA9,
0x30,0xEB,0xE1,0x38,0x0A,0x7A,0xB3,0x20,0x01,0x4F,0xCD,0x8E,0x2D,0xD1,0xC9,0xD1,
0xCD,0x93,0x32,0xAF,0xCD,0xC0,0x30,0xD8,0xD9,0xE5,0xD9,0xD5,0xEB,0xCD,0xC0,0x30,
0xEB,0x38,0x5A,0xE5,0xCD,0xBA,0x2F,0x78,0xA7,0xED,0x62,0xD9,0xE5,0xED,0x62,0xD9,
0x06,0x21,0x18,0x11,0x30,0x05,0x19,0xD9,0xED,0x5A,0xD9,0xD9,0xCB,0x1C,0xCB,0x1D,
0xD9,0xCB,0x1C,0xCB,0x1D,0xD9,0xCB,0x18,0xCB,0x19,0xD9,0xCB,0x19,0x1F,0x10,0xE4,
0xEB,0xD9,0xEB,0xD9,0xC1,0xE1,0x78,0x81,0x20,0x01,0xA7,0x3D,0x3F,0x17,0x3F,0x1F,
0xF2,0x46,0x31,0x30,0x68,0xA7,0x3C,0x20,0x08,0x38,0x06,0xD9,0xCB,0x7A,0xD9,0x20,
0x5C,0x77,0xD9,0x78,0xD9,0x30,0x15,0x7E,0xA7,0x3E,0x80,0x28,0x01,0xAF,0xD9,0xA2,
0xCD,0xFB,0x2F,0x07,0x77,0x38,0x2E,0x23,0x77,0x2B,0x18,0x29,0x06,0x20,0xD9,0xCB,
0x7A,0xD9,0x20,0x12,0x07,0xCB,0x13,0xCB,0x12,0xD9,0xCB,0x13,0xCB,0x12,0xD9,0x35,
0x28,0xD7,0x10,0xEA,0x18,0xD7,0x17,0x30,0x0C,0xCD,0x04,0x30,0x20,0x07,0xD9,0x16,
0x80,0xD9,0x34,0x28,0x18,0xE5,0x23,0xD9,0xD5,0xD9,0xC1,0x78,0x17,0xCB,0x16,0x1F,
0x77,0x23,0x71,0x23,0x72,0x23,0x73,0xE1,0xD1,0xD9,0xE1,0xD9,0xC9,0xCF,0x05,0xCD,
0x93,0x32,0xEB,0xAF,0xCD,0xC0,0x30,0x38,0xF4,0xEB,0xCD,0xC0,0x30,0xD8,0xD9,0xE5,
0xD9,0xD5,0xE5,0xCD,0xBA,0x2F,0xD9,0xE5,0x60,0x69,0xD9,0x61,0x68,0xAF,0x06,0xDF,
0x18,0x10,0x17,0xCB,0x11,0xD9,0xCB,0x11,0xCB,0x10,0xD9,0x29,0xD9,0xED,0x6A,0xD9,
0x38,0x10,0xED,0x52,0xD9,0xED,0x52,0xD9,0x30,0x0F,0x19,0xD9,0xED,0x5A,0xD9,0xA7,
0x18,0x08,0xA7,0xED,0x52,0xD9,0xED,0x52,0xD9,0x37,0x04,0xFA,0xD2,0x31,0xF5,0x28,
0xE1,0x5F,0x51,0xD9,0x59,0x50,0xF1,0xCB,0x18,0xF1,0xCB,0x18,0xD9,0xC1,0xE1,0x78,
0x91,0xC3,0x3D,0x31,0x7E,0xA7,0xC8,0xFE,0x81,0x30,0x06,0x36,0x00,0x3E,0x20,0x18,
0x51,0xFE,0x91,0x20,0x1A,0x23,0x23,0x23,0x3E,0x80,0xA6,0x2B,0xB6,0x2B,0x20,0x03,
0x3E,0x80,0xAE,0x2B,0x20,0x36,0x77,0x23,0x36,0xFF,0x2B,0x3E,0x18,0x18,0x33,0x30,
0x2C,0xD5,0x2F,0xC6,0x91,0x23,0x56,0x23,0x5E,0x2B,0x2B,0x0E,0x00,0xCB,0x7A,0x28,
0x01,0x0D,0xCB,0xFA,0x06,0x08,0x90,0x80,0x38,0x04,0x5A,0x16,0x00,0x90,0x28,0x07,
0x47,0xCB,0x3A,0xCB,0x1B,0x10,0xFA,0xCD,0x8E,0x2D,0xD1,0xC9,0x7E,0xD6,0xA0,0xF0,
0xED,0x44,0xD5,0xEB,0x2B,0x47,0xCB,0x38,0xCB,0x38,0xCB,0x38,0x28,0x05,0x36,0x00,
0x2B,0x10,0xFB,0xE6,0x07,0x28,0x09,0x47,0x3E,0xFF,0xCB,0x27,0x10,0xFC,0xA6,0x77,
0xEB,0xD1,0xC9,0xCD,0x96,0x32,0xEB,0x7E,0xA7,0xC0,0xD5,0xCD,0x7F,0x2D,0xAF,0x23,
0x77,0x2B,0x77,0x06,0x91,0x7A,0xA7,0x20,0x08,0xB3,0x42,0x28,0x10,0x53,0x58,0x06,
0x89,0xEB,0x05,0x29,0x30,0xFC,0xCB,0x09,0xCB,0x1C,0xCB,0x1D,0xEB,0x2B,0x73,0x2B,
0x72,0x2B,0x70,0xD1,0xC9,0x00,0xB0,0x00,0x40,0xB0,0x00,0x01,0x30,0x00,0xF1,0x49,
0x0F,0xDA,0xA2,0x40,0xB0,0x00,0x0A,0x8F,0x36,0x3C,0x34,0xA1,0x33,0x0F,0x30,0xCA,
0x30,0xAF,0x31,0x51,0x38,0x1B,0x35,0x24,0x35,0x3B,0x35,0x3B,0x35,0x3B,0x35,0x3B,
0x35,0x3B,0x35,0x3B,0x35,0x14,0x30,0x2D,0x35,0x3B,0x35,0x3B,0x35,0x3B,0x35,0x3B,
0x35,0x3B,0x35,0x3B,0x35,0x9C,0x35,0xDE,0x35,0xBC,0x34,0x45,0x36,0x6E,0x34,0x69,
0x36,0xDE,0x35,0x74,0x36,0xB5,0x37,0xAA,0x37,0xDA,0x37,0x33,0x38,0x43,0x38,0xE2,
0x37,0x13,0x37,0xC4,0x36,0xAF,0x36,0x4A,0x38,0x92,0x34,0x6A,0x34,0xAC,0x34,0xA5,
0x34,0xB3,0x34,0x1F,0x36,0xC9,0x35,0x01,0x35,0xC0,0x33,0xA0,0x36,0x86,0x36,0xC6,
0x33,0x7A,0x36,0x06,0x35,0xF9,0x34,0x9B,0x36,0x83,0x37,0x14,0x32,0xA2,0x33,0x4F,
0x2D,0x97,0x32,0x49,0x34,0x1B,0x34,0x2D,0x34,0x0F,0x34,0xCD,0xBF,0x35,0x78,0x32,
0x67,0x5C,0xD9,0xE3,0xD9,0xED,0x53,0x65,0x5C,0xD9,0x7E,0x23,0xE5,0xA7,0xF2,0x80,
0x33,0x57,0xE6,0x60,0x0F,0x0F,0x0F,0x0F,0xC6,0x7C,0x6F,0x7A,0xE6,0x1F,0x18,0x0E,
0xFE,0x18,0x30,0x08,0xD9,0x01,0xFB,0xFF,0x54,0x5D,0x09,0xD9,0x07,0x6F,0x11,0xD7,
0x32,0x26,0x00,0x19,0x5E,0x23,0x56,0x21,0x65,0x33,0xE3,0xD5,0xD9,0xED,0x4B,0x66,
0x5C,0xC9,0xF1,0x3A,0x67,0x5C,0xD9,0x18,0xC3,0xD5,0xE5,0x01,0x05,0x00,0xCD,0x05,
0x1F,0xE1,0xD1,0xC9,0xED,0x5B,0x65,0x5C,0xCD,0xC0,0x33,0xED,0x53,0x65,0x5C,0xC9,
0xCD,0xA9,0x33,0xED,0xB0,0xC9,0x62,0x6B,0xCD,0xA9,0x33,0xD9,0xE5,0xD9,0xE3,0xC5,
0x7E,0xE6,0xC0,0x07,0x07,0x4F,0x0C,0x7E,0xE6,0x3F,0x20,0x02,0x23,0x7E,0xC6,0x50,
0x12,0x3E,0x05,0x91,0x23,0x13,0x06,0x00,0xED,0xB0,0xC1,0xE3,0xD9,0xE1,0xD9,0x47,
0xAF,0x05,0xC8,0x12,0x13,0x18,0xFA,0xA7,0xC8,0xF5,0xD5,0x11,0x00,0x00,0xCD,0xC8,
0x33,0xD1,0xF1,0x3D,0x18,0xF2,0x4F,0x07,0x07,0x81,0x4F,0x06,0x00,0x09,0xC9,0xD5,
0x2A,0x68,0x5C,0xCD,0x06,0x34,0xCD,0xC0,0x33,0xE1,0xC9,0x62,0x6B,0xD9,0xE5,0x21,
0xC5,0x32,0xD9,0xCD,0xF7,0x33,0xCD,0xC8,0x33,0xD9,0xE1,0xD9,0xC9,0xE5,0xEB,0x2A,
0x68,0x5C,0xCD,0x06,0x34,0xEB,0xCD,0xC0,0x33,0xEB,0xE1,0xC9,0x06,0x05,0x1A,0x4E,
0xEB,0x12,0x71,0x23,0x13,0x10,0xF7,0xEB,0xC9,0x47,0xCD,0x5E,0x33,0x31,0x0F,0xC0,
0x02,0xA0,0xC2,0x31,0xE0,0x04,0xE2,0xC1,0x03,0x38,0xCD,0xC6,0x33,0xCD,0x62,0x33,
0x0F,0x01,0xC2,0x02,0x35,0xEE,0xE1,0x03,0x38,0xC9,0x06,0xFF,0x18,0x06,0xCD,0xE9,
0x34,0xD8,0x06,0x00,0x7E,0xA7,0x28,0x0B,0x23,0x78,0xE6,0x80,0xB6,0x17,0x3F,0x1F,
0x77,0x2B,0xC9,0xD5,0xE5,0xCD,0x7F,0x2D,0xE1,0x78,0xB1,0x2F,0x4F,0xCD,0x8E,0x2D,
0xD1,0xC9,0xCD,0xE9,0x34,0xD8,0xD5,0x11,0x01,0x00,0x23,0xCB,0x16,0x2B,0x9F,0x4F,
0xCD,0x8E,0x2D,0xD1,0xC9,0xCD,0x99,0x1E,0xED,0x78,0x18,0x04,0xCD,0x99,0x1E,0x0A,
0xC3,0x28,0x2D,0xCD,0x99,0x1E,0x21,0x2B,0x2D,0xE5,0xC5,0xC9,0xCD,0xF1,0x2B,0x0B,
0x78,0xB1,0x20,0x23,0x1A,0xCD,0x8D,0x2C,0x38,0x09,0xD6,0x90,0x38,0x19,0xFE,0x15,
0x30,0x15,0x3C,0x3D,0x87,0x87,0x87,0xFE,0xA8,0x30,0x0C,0xED,0x4B,0x7B,0x5C,0x81,
0x4F,0x30,0x01,0x04,0xC3,0x2B,0x2D,0xCF,0x09,0xE5,0xC5,0x47,0x7E,0x23,0xB6,0x23,
0xB6,0x23,0xB6,0x78,0xC1,0xE1,0xC0,0x37,0xC9,0xCD,0xE9,0x34,0xD8,0x3E,0xFF,0x18,
0x06,0xCD,0xE9,0x34,0x18,0x05,0xAF,0x23,0xAE,0x2B,0x07,0xE5,0x3E,0x00,0x77,0x23,
0x77,0x23,0x17,0x77,0x1F,0x23,0x77,0x23,0x77,0xE1,0xC9,0xEB,0xCD,0xE9,0x34,0xEB,
0xD8,0x37,0x18,0xE7,0xEB,0xCD,0xE9,0x34,0xEB,0xD0,0xA7,0x18,0xDE,0xEB,0xCD,0xE9,
0x34,0xEB,0xD0,0xD5,0x1B,0xAF,0x12,0x1B,0x12,0xD1,0xC9,0x78,0xD6,0x08,0xCB,0x57,
0x20,0x01,0x3D,0x0F,0x30,0x08,0xF5,0xE5,0xCD,0x3C,0x34,0xD1,0xEB,0xF1,0xCB,0x57,
0x20,0x07,0x0F,0xF5,0xCD,0x0F,0x30,0x18,0x33,0x0F,0xF5,0xCD,0xF1,0x2B,0xD5,0xC5,
0xCD,0xF1,0x2B,0xE1,0x7C,0xB5,0xE3,0x78,0x20,0x0B,0xB1,0xC1,0x28,0x04,0xF1,0x3F,
0x18,0x16,0xF1,0x18,0x13,0xB1,0x28,0x0D,0x1A,0x96,0x38,0x09,0x20,0xED,0x0B,0x13,
0x23,0xE3,0x2B,0x18,0xDF,0xC1,0xF1,0xA7,0xF5,0xEF,0xA0,0x38,0xF1,0xF5,0xDC,0x01,
0x35,0xF1,0xF5,0xD4,0xF9,0x34,0xF1,0x0F,0xD4,0x01,0x35,0xC9,0xCD,0xF1,0x2B,0xD5,
0xC5,0xCD,0xF1,0x2B,0xE1,0xE5,0xD5,0xC5,0x09,0x44,0x4D,0xF7,0xCD,0xB2,0x2A,0xC1,
0xE1,0x78,0xB1,0x28,0x02,0xED,0xB0,0xC1,0xE1,0x78,0xB1,0x28,0x02,0xED,0xB0,0x2A,
0x65,0x5C,0x11,0xFB,0xFF,0xE5,0x19,0xD1,0xC9,0xCD,0xD5,0x2D,0x38,0x0E,0x20,0x0C,
0xF5,0x01,0x01,0x00,0xF7,0xF1,0x12,0xCD,0xB2,0x2A,0xEB,0xC9,0xCF,0x0A,0x2A,0x5D,
0x5C,0xE5,0x78,0xC6,0xE3,0x9F,0xF5,0xCD,0xF1,0x2B,0xD5,0x03,0xF7,0xE1,0xED,0x53,
0x5D,0x5C,0xD5,0xED,0xB0,0xEB,0x2B,0x36,0x0D,0xFD,0xCB,0x01,0xBE,0xCD,0xFB,0x24,
0xDF,0xFE,0x0D,0x20,0x07,0xE1,0xF1,0xFD,0xAE,0x01,0xE6,0x40,0xC2,0x8A,0x1C,0x22,
0x5D,0x5C,0xFD,0xCB,0x01,0xFE,0xCD,0xFB,0x24,0xE1,0x22,0x5D,0x5C,0x18,0xA0,0x01,
0x01,0x00,0xF7,0x22,0x5B,0x5C,0xE5,0x2A,0x51,0x5C,0xE5,0x3E,0xFF,0xCD,0x01,0x16,
0xCD,0xE3,0x2D,0xE1,0xCD,0x15,0x16,0xD1,0x2A,0x5B,0x5C,0xA7,0xED,0x52,0x44,0x4D,
0xCD,0xB2,0x2A,0xEB,0xC9,0xCD,0x94,0x1E,0xFE,0x10,0xD2,0x9F,0x1E,0x2A,0x51,0x5C,
0xE5,0xCD,0x01,0x16,0xCD,0xE6,0x15,0x01,0x00,0x00,0x30,0x03,0x0C,0xF7,0x12,0xCD,
0xB2,0x2A,0xE1,0xCD,0x15,0x16,0xC3,0xBF,0x35,0xCD,0xF1,0x2B,0x78,0xB1,0x28,0x01,
0x1A,0xC3,0x28,0x2D,0xCD,0xF1,0x2B,0xC3,0x2B,0x2D,0xD9,0xE5,0x21,0x67,0x5C,0x35,
0xE1,0x20,0x04,0x23,0xD9,0xC9,0xD9,0x5E,0x7B,0x17,0x9F,0x57,0x19,0xD9,0xC9,0x13,
0x13,0x1A,0x1B,0x1B,0xA7,0x20,0xEF,0xD9,0x23,0xD9,0xC9,0xF1,0xD9,0xE3,0xD9,0xC9,
0xEF,0xC0,0x02,0x31,0xE0,0x05,0x27,0xE0,0x01,0xC0,0x04,0x03,0xE0,0x38,0xC9,0xEF,
0x31,0x36,0x00,0x04,0x3A,0x38,0xC9,0x31,0x3A,0xC0,0x03,0xE0,0x01,0x30,0x00,0x03,
0xA1,0x03,0x38,0xC9,0xEF,0x3D,0x34,0xF1,0x38,0xAA,0x3B,0x29,0x04,0x31,0x27,0xC3,
0x03,0x31,0x0F,0xA1,0x03,0x88,0x13,0x36,0x58,0x65,0x66,0x9D,0x78,0x65,0x40,0xA2,
0x60,0x32,0xC9,0xE7,0x21,0xF7,0xAF,0x24,0xEB,0x2F,0xB0,0xB0,0x14,0xEE,0x7E,0xBB,
0x94,0x58,0xF1,0x3A,0x7E,0xF8,0xCF,0xE3,0x38,0xCD,0xD5,0x2D,0x20,0x07,0x38,0x03,
0x86,0x30,0x09,0xCF,0x05,0x38,0x07,0x96,0x30,0x04,0xED,0x44,0x77,0xC9,0xEF,0x02,
0xA0,0x38,0xC9,0xEF,0x3D,0x31,0x37,0x00,0x04,0x38,0xCF,0x09,0xA0,0x02,0x38,0x7E,
0x36,0x80,0xCD,0x28,0x2D,0xEF,0x34,0x38,0x00,0x03,0x01,0x31,0x34,0xF0,0x4C,0xCC,
0xCC,0xCD,0x03,0x37,0x00,0x08,0x01,0xA1,0x03,0x01,0x38,0x34,0xEF,0x01,0x34,0xF0,
0x31,0x72,0x17,0xF8,0x04,0x01,0xA2,0x03,0xA2,0x03,0x31,0x34,0x32,0x20,0x04,0xA2,
0x03,0x8C,0x11,0xAC,0x14,0x09,0x56,0xDA,0xA5,0x59,0x30,0xC5,0x5C,0x90,0xAA,0x9E,
0x70,0x6F,0x61,0xA1,0xCB,0xDA,0x96,0xA4,0x31,0x9F,0xB4,0xE7,0xA0,0xFE,0x5C,0xFC,
0xEA,0x1B,0x43,0xCA,0x36,0xED,0xA7,0x9C,0x7E,0x5E,0xF0,0x6E,0x23,0x80,0x93,0x04,
0x0F,0x38,0xC9,0xEF,0x3D,0x34,0xEE,0x22,0xF9,0x83,0x6E,0x04,0x31,0xA2,0x0F,0x27,
0x03,0x31,0x0F,0x31,0x0F,0x31,0x2A,0xA1,0x03,0x31,0x37,0xC0,0x00,0x04,0x02,0x38,
0xC9,0xA1,0x03,0x01,0x36,0x00,0x02,0x1B,0x38,0xC9,0xEF,0x39,0x2A,0xA1,0x03,0xE0,
0x00,0x06,0x1B,0x33,0x03,0xEF,0x39,0x31,0x31,0x04,0x31,0x0F,0xA1,0x03,0x86,0x14,
0xE6,0x5C,0x1F,0x0B,0xA3,0x8F,0x38,0xEE,0xE9,0x15,0x63,0xBB,0x23,0xEE,0x92,0x0D,
0xCD,0xED,0xF1,0x23,0x5D,0x1B,0xEA,0x04,0x38,0xC9,0xEF,0x31,0x1F,0x01,0x20,0x05,
0x38,0xC9,0xCD,0x97,0x32,0x7E,0xFE,0x81,0x38,0x0E,0xEF,0xA1,0x1B,0x01,0x05,0x31,
0x36,0xA3,0x01,0x00,0x06,0x1B,0x33,0x03,0xEF,0xA0,0x01,0x31,0x31,0x04,0x31,0x0F,
0xA1,0x03,0x8C,0x10,0xB2,0x13,0x0E,0x55,0xE4,0x8D,0x58,0x39,0xBC,0x5B,0x98,0xFD,
0x9E,0x00,0x36,0x75,0xA0,0xDB,0xE8,0xB4,0x63,0x42,0xC4,0xE6,0xB5,0x09,0x36,0xBE,
0xE9,0x36,0x73,0x1B,0x5D,0xEC,0xD8,0xDE,0x63,0xBE,0xF0,0x61,0xA1,0xB3,0x0C,0x04,
0x0F,0x38,0xC9,0xEF,0x31,0x31,0x04,0xA1,0x03,0x1B,0x28,0xA1,0x0F,0x05,0x24,0x31,
0x0F,0x38,0xC9,0xEF,0x22,0xA3,0x03,0x1B,0x38,0xC9,0xEF,0x31,0x30,0x00,0x1E,0xA2,
0x38,0xEF,0x01,0x31,0x30,0x00,0x07,0x25,0x04,0x38,0xC3,0xC4,0x36,0x02,0x31,0x30,
0x00,0x09,0xA0,0x01,0x37,0x00,0x06,0xA1,0x01,0x05,0x02,0xA1,0x38,0xC9,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x10,0x10,0x10,0x00,0x10,0x00,
0x00,0x24,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x24,0x7E,0x24,0x24,0x7E,0x24,0x00,
0x00,0x08,0x3E,0x28,0x3E,0x0A,0x3E,0x08,0x00,0x62,0x64,0x08,0x10,0x26,0x46,0x00,
0x00,0x10,0x28,0x10,0x2A,0x44,0x3A,0x00,0x00,0x08,0x10,0x00,0x00,0x00,0x00,0x00,
0x00,0x04,0x08,0x08,0x08,0x08,0x04,0x00,0x00,0x20,0x10,0x10,0x10,0x10,0x20,0x00,
0x00,0x00,0x14,0x08,0x3E,0x08,0x14,0x00,0x00,0x00,0x08,0x08,0x3E,0x08,0x08,0x00,
0x00,0x00,0x00,0x00,0x00,0x08,0x08,0x10,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x02,0x04,0x08,0x10,0x20,0x00,
0x00,0x3C,0x46,0x4A,0x52,0x62,0x3C,0x00,0x00,0x18,0x28,0x08,0x08,0x08,0x3E,0x00,
0x00,0x3C,0x42,0x02,0x3C,0x40,0x7E,0x00,0x00,0x3C,0x42,0x0C,0x02,0x42,0x3C,0x00,
0x00,0x08,0x18,0x28,0x48,0x7E,0x08,0x00,0x00,0x7E,0x40,0x7C,0x02,0x42,0x3C,0x00,
0x00,0x3C,0x40,0x7C,0x42,0x42,0x3C,0x00,0x00,0x7E,0x02,0x04,0x08,0x10,0x10,0x00,
0x00,0x3C,0x42,0x3C,0x42,0x42,0x3C,0x00,0x00,0x3C,0x42,0x42,0x3E,0x02,0x3C,0x00,
0x00,0x00,0x00,0x10,0x00,0x00,0x10,0x00,0x00,0x00,0x10,0x00,0x00,0x10,0x10,0x20,
0x00,0x00,0x04,0x08,0x10,0x08,0x04,0x00,0x00,0x00,0x00,0x3E,0x00,0x3E,0x00,0x00,
0x00,0x00,0x10,0x08,0x04,0x08,0x10,0x00,0x00,0x3C,0x42,0x04,0x08,0x00,0x08,0x00,
0x00,0x3C,0x4A,0x56,0x5E,0x40,0x3C,0x00,0x00,0x3C,0x42,0x42,0x7E,0x42,0x42,0x00,
0x00,0x7C,0x42,0x7C,0x42,0x42,0x7C,0x00,0x00,0x3C,0x42,0x40,0x40,0x42,0x3C,0x00,
0x00,0x78,0x44,0x42,0x42,0x44,0x78,0x00,0x00,0x7E,0x40,0x7C,0x40,0x40,0x7E,0x00,
0x00,0x7E,0x40,0x7C,0x40,0x40,0x40,0x00,0x00,0x3C,0x42,0x40,0x4E,0x42,0x3C,0x00,
0x00,0x42,0x42,0x7E,0x42,0x42,0x42,0x00,0x00,0x3E,0x08,0x08,0x08,0x08,0x3E,0x00,
0x00,0x02,0x02,0x02,0x42,0x42,0x3C,0x00,0x00,0x44,0x48,0x70,0x48,0x44,0x42,0x00,
0x00,0x40,0x40,0x40,0x40,0x40,0x7E,0x00,0x00,0x42,0x66,0x5A,0x42,0x42,0x42,0x00,
0x00,0x42,0x62,0x52,0x4A,0x46,0x42,0x00,0x00,0x3C,0x42,0x42,0x42,0x42,0x3C,0x00,
0x00,0x7C,0x42,0x42,0x7C,0x40,0x40,0x00,0x00,0x3C,0x42,0x42,0x52,0x4A,0x3C,0x00,
0x00,0x7C,0x42,0x42,0x7C,0x44,0x42,0x00,0x00,0x3C,0x40,0x3C,0x02,0x42,0x3C,0x00,
0x00,0xFE,0x10,0x10,0x10,0x10,0x10,0x00,0x00,0x42,0x42,0x42,0x42,0x42,0x3C,0x00,
0x00,0x42,0x42,0x42,0x42,0x24,0x18,0x00,0x00,0x42,0x42,0x42,0x42,0x5A,0x24,0x00,
0x00,0x42,0x24,0x18,0x18,0x24,0x42,0x00,0x00,0x82,0x44,0x28,0x10,0x10,0x10,0x00,
0x00,0x7E,0x04,0x08,0x10,0x20,0x7E,0x00,0x00,0x0E,0x08,0x08,0x08,0x08,0x0E,0x00,
0x00,0x00,0x40,0x20,0x10,0x08,0x04,0x00,0x00,0x70,0x10,0x10,0x10,0x10,0x70,0x00,
0x00,0x10,0x38,0x54,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
0x00,0x1C,0x22,0x78,0x20,0x20,0x7E,0x00,0x00,0x00,0x38,0x04,0x3C,0x44,0x3C,0x00,
0x00,0x20,0x20,0x3C,0x22,0x22,0x3C,0x00,0x00,0x00,0x1C,0x20,0x20,0x20,0x1C,0x00,
0x00,0x04,0x04,0x3C,0x44,0x44,0x3C,0x00,0x00,0x00,0x38,0x44,0x78,0x40,0x3C,0x00,
0x00,0x0C,0x10,0x18,0x10,0x10,0x10,0x00,0x00,0x00,0x3C,0x44,0x44,0x3C,0x04,0x38,
0x00,0x40,0x40,0x78,0x44,0x44,0x44,0x00,0x00,0x10,0x00,0x30,0x10,0x10,0x38,0x00,
0x00,0x04,0x00,0x04,0x04,0x04,0x24,0x18,0x00,0x20,0x28,0x30,0x30,0x28,0x24,0x00,
0x00,0x10,0x10,0x10,0x10,0x10,0x0C,0x00,0x00,0x00,0x68,0x54,0x54,0x54,0x54,0x00,
0x00,0x00,0x78,0x44,0x44,0x44,0x44,0x00,0x00,0x00,0x38,0x44,0x44,0x44,0x38,0x00,
0x00,0x00,0x78,0x44,0x44,0x78,0x40,0x40,0x00,0x00,0x3C,0x44,0x44,0x3C,0x04,0x06,
0x00,0x00,0x1C,0x20,0x20,0x20,0x20,0x00,0x00,0x00,0x38,0x40,0x38,0x04,0x78,0x00,
0x00,0x10,0x38,0x10,0x10,0x10,0x0C,0x00,0x00,0x00,0x44,0x44,0x44,0x44,0x38,0x00,
0x00,0x00,0x44,0x44,0x28,0x28,0x10,0x00,0x00,0x00,0x44,0x54,0x54,0x54,0x28,0x00,
0x00,0x00,0x44,0x28,0x10,0x28,0x44,0x00,0x00,0x00,0x44,0x44,0x44,0x3C,0x04,0x38,
0x00,0x00,0x7C,0x08,0x10,0x20,0x7C,0x00,0x00,0x0E,0x08,0x30,0x08,0x08,0x0E,0x00,
0x00,0x08,0x08,0x08,0x08,0x08,0x08,0x00,0x00,0x70,0x10,0x0C,0x10,0x10,0x70,0x00,
0x00,0x14,0x28,0x00,0x00,0x00,0x00,0x00,0x3C,0x42,0x99,0xA1,0xA1,0x99,0x42,0x3C
          };
    }
}